#Array declarations==============================================
declare -A appliance_assert_can_be_recovered
declare -A appliance_create
declare -A appliance_destroy
declare -A appliance_list
declare -A appliance_param_clear
declare -A appliance_param_get
declare -A appliance_param_list
declare -A appliance_param_set
declare -A appliance_recover
declare -A appliance_shutdown
declare -A appliance_start
declare -A audit_log_get
declare -A bond_create
declare -A bond_destroy
declare -A bond_list
declare -A bond_param_clear
declare -A bond_param_get
declare -A bond_param_list
declare -A bond_param_set
declare -A bond_set_mode
declare -A cd_list
declare -A console_list
declare -A console_param_add
declare -A console_param_clear
declare -A console_param_get
declare -A console_param_list
declare -A console_param_remove
declare -A console_param_set
declare -A diagnostic_net_stats
declare -A diagnostic_vdi_status
declare -A diagnostic_vm_status
declare -A drtask_create
declare -A drtask_destroy
declare -A drtask_list
declare -A drtask_param_get
declare -A drtask_param_list
declare -A event_wait
declare -A gpu_group_list
declare -A gpu_group_param_add
declare -A gpu_group_param_clear
declare -A gpu_group_param_get
declare -A gpu_group_param_list
declare -A gpu_group_param_remove
declare -A gpu_group_param_set
declare -A host_apply_edition
declare -A host_backup
declare -A host_bugreport_upload
declare -A host_call_plugin
declare -A host_compute_free_memory
declare -A host_compute_memory_overhead
declare -A host_cpu_info
declare -A host_cpu_list
declare -A host_cpu_param_get
declare -A host_cpu_param_list
declare -A host_crashdump_destroy
declare -A host_crashdump_list
declare -A host_crashdump_param_get
declare -A host_crashdump_param_list
declare -A host_crashdump_upload
declare -A host_data_source_forget
declare -A host_data_source_list
declare -A host_data_source_query
declare -A host_data_source_record
declare -A host_declare_dead
declare -A host_disable
declare -A host_disable_local_storage_caching
declare -A host_dmesg
declare -A host_emergency_ha_disable
declare -A host_emergency_management_reconfigure
declare -A host_enable
declare -A host_enable_local_storage_caching
declare -A host_evacuate
declare -A host_forget
declare -A host_get_cpu_features
declare -A host_get_server_certificate
declare -A host_get_sm_diagnostics
declare -A host_get_system_status
declare -A host_get_system_status_capabilities
declare -A host_get_thread_diagnostics
declare -A host_get_vms_which_prevent_evacuation
declare -A host_license_view
declare -A host_list
declare -A host_logs_download
declare -A host_management_reconfigure
declare -A host_param_add
declare -A host_param_clear
declare -A host_param_get
declare -A host_param_list
declare -A host_param_remove
declare -A host_param_set
declare -A host_power_on
declare -A host_reboot
declare -A host_reset_cpu_features
declare -A host_restore
declare -A host_send_debug_keys
declare -A host_set_cpu_features
declare -A host_set_hostname_live
declare -A host_set_power_on_mode
declare -A host_shutdown
declare -A host_sm_dp_destroy
declare -A host_sync_data
declare -A host_syslog_reconfigure
declare -A log_set_output
declare -A message_create
declare -A message_destroy
declare -A message_list
declare -A message_param_get
declare -A message_param_list
declare -A network_create
declare -A network_destroy
declare -A network_list
declare -A network_param_add
declare -A network_param_clear
declare -A network_param_get
declare -A network_param_list
declare -A network_param_remove
declare -A network_param_set
declare -A patch_apply
declare -A patch_clean
declare -A patch_destroy
declare -A patch_list
declare -A patch_param_clear
declare -A patch_param_get
declare -A patch_param_list
declare -A patch_pool_apply
declare -A patch_pool_clean
declare -A patch_precheck
declare -A patch_upload
declare -A pbd_create
declare -A pbd_destroy
declare -A pbd_list
declare -A pbd_param_add
declare -A pbd_param_clear
declare -A pbd_param_get
declare -A pbd_param_list
declare -A pbd_param_remove
declare -A pbd_param_set
declare -A pbd_plug
declare -A pbd_unplug
declare -A pgpu_list
declare -A pgpu_param_add
declare -A pgpu_param_clear
declare -A pgpu_param_get
declare -A pgpu_param_list
declare -A pgpu_param_remove
declare -A pgpu_param_set
declare -A pif_forget
declare -A pif_introduce
declare -A pif_list
declare -A pif_param_add
declare -A pif_param_clear
declare -A pif_param_get
declare -A pif_param_list
declare -A pif_param_remove
declare -A pif_param_set
declare -A pif_plug
declare -A pif_reconfigure_ip
declare -A pif_reconfigure_ipv6
declare -A pif_scan
declare -A pif_set_primary_address_type
declare -A pif_unplug
declare -A pool_apply_edition
declare -A pool_certificate_install
declare -A pool_certificate_uninstall
declare -A pool_crl_install
declare -A pool_crl_uninstall
declare -A pool_designate_new_master
declare -A pool_disable_external_auth
declare -A pool_disable_local_storage_caching
declare -A pool_dump_database
declare -A pool_eject
declare -A pool_emergency_reset_master
declare -A pool_enable_external_auth
declare -A pool_enable_local_storage_caching
declare -A pool_enable_redo_log
declare -A pool_ha_compute_hypothetical_max_host_failures_to_tolerate
declare -A pool_ha_enable
declare -A pool_join
declare -A pool_list
declare -A pool_param_add
declare -A pool_param_clear
declare -A pool_param_get
declare -A pool_param_list
declare -A pool_param_remove
declare -A pool_param_set
declare -A pool_restore_database
declare -A pool_send_test_post
declare -A pool_vlan_create
declare -A role_list
declare -A role_param_get
declare -A role_param_list
declare -A secret_create
declare -A secret_destroy
declare -A secret_list
declare -A secret_param_clear
declare -A secret_param_get
declare -A secret_param_list
declare -A secret_param_set
declare -A session_subject_identifier_logout
declare -A sm_list
declare -A sm_param_clear
declare -A sm_param_get
declare -A sm_param_list
declare -A snapshot_clone
declare -A snapshot_copy
declare -A snapshot_destroy
declare -A snapshot_disk_list
declare -A snapshot_export_to_template
declare -A snapshot_list
declare -A snapshot_param_add
declare -A snapshot_param_clear
declare -A snapshot_param_get
declare -A snapshot_param_list
declare -A snapshot_param_remove
declare -A snapshot_param_set
declare -A snapshot_reset_powerstate
declare -A snapshot_revert
declare -A snapshot_uninstall
declare -A sr_create
declare -A sr_destroy
declare -A sr_disable_database_replication
declare -A sr_enable_database_replication
declare -A sr_forget
declare -A sr_introduce
declare -A sr_list
declare -A sr_param_add
declare -A sr_param_clear
declare -A sr_param_get
declare -A sr_param_list
declare -A sr_param_remove
declare -A sr_param_set
declare -A sr_probe
declare -A sr_scan
declare -A sr_update
declare -A subject_add
declare -A subject_list
declare -A subject_param_clear
declare -A subject_param_get
declare -A subject_param_list
declare -A subject_remove
declare -A subject_role_add
declare -A subject_role_remove
declare -A task_cancel
declare -A task_list
declare -A task_param_add
declare -A task_param_clear
declare -A task_param_get
declare -A task_param_list
declare -A task_param_remove
declare -A task_param_set
declare -A template_export
declare -A template_list
declare -A template_param_add
declare -A template_param_clear
declare -A template_param_get
declare -A template_param_list
declare -A template_param_remove
declare -A template_param_set
declare -A template_uninstall
declare -A tunnel_create
declare -A tunnel_destroy
declare -A tunnel_list
declare -A tunnel_param_add
declare -A tunnel_param_clear
declare -A tunnel_param_get
declare -A tunnel_param_list
declare -A tunnel_param_remove
declare -A tunnel_param_set
declare -A update_upload
declare -A user_password_change
declare -A vbd_create
declare -A vbd_destroy
declare -A vbd_eject
declare -A vbd_insert
declare -A vbd_list
declare -A vbd_param_add
declare -A vbd_param_clear
declare -A vbd_param_get
declare -A vbd_param_list
declare -A vbd_param_remove
declare -A vbd_param_set
declare -A vbd_plug
declare -A vbd_unplug
declare -A vdi_clone
declare -A vdi_copy
declare -A vdi_create
declare -A vdi_destroy
declare -A vdi_forget
declare -A vdi_import
declare -A vdi_introduce
declare -A vdi_list
declare -A vdi_param_add
declare -A vdi_param_clear
declare -A vdi_param_get
declare -A vdi_param_list
declare -A vdi_param_remove
declare -A vdi_param_set
declare -A vdi_pool_migrate
declare -A vdi_resize
declare -A vdi_snapshot
declare -A vdi_unlock
declare -A vdi_update
declare -A vgpu_create
declare -A vgpu_destroy
declare -A vgpu_list
declare -A vgpu_param_add
declare -A vgpu_param_clear
declare -A vgpu_param_get
declare -A vgpu_param_list
declare -A vgpu_param_remove
declare -A vgpu_param_set
declare -A vif_create
declare -A vif_destroy
declare -A vif_list
declare -A vif_param_add
declare -A vif_param_clear
declare -A vif_param_get
declare -A vif_param_list
declare -A vif_param_remove
declare -A vif_param_set
declare -A vif_plug
declare -A vif_unplug
declare -A vlan_create
declare -A vlan_destroy
declare -A vlan_list
declare -A vlan_param_get
declare -A vlan_param_list
declare -A vm_assert_can_be_recovered
declare -A vm_cd_add
declare -A vm_cd_eject
declare -A vm_cd_insert
declare -A vm_cd_list
declare -A vm_cd_remove
declare -A vm_checkpoint
declare -A vm_clone
declare -A vm_compute_maximum_memory
declare -A vm_compute_memory_overhead
declare -A vm_copy
declare -A vm_copy_bios_strings
declare -A vm_crashdump_list
declare -A vm_data_source_forget
declare -A vm_data_source_list
declare -A vm_data_source_query
declare -A vm_data_source_record
declare -A vm_destroy
declare -A vm_disk_add
declare -A vm_disk_list
declare -A vm_disk_remove
declare -A vm_export
declare -A vm_import
declare -A vm_install
declare -A vm_is_bios_customized
declare -A vm_list
declare -A vm_memory_dynamic_range_set
declare -A vm_memory_limits_set
declare -A vm_memory_shadow_multiplier_set
declare -A vm_memory_static_range_set
declare -A vm_memory_target_set
declare -A vm_migrate
declare -A vm_param_add
declare -A vm_param_clear
declare -A vm_param_get
declare -A vm_param_list
declare -A vm_param_remove
declare -A vm_param_set
declare -A vm_pause
declare -A vm_reboot
declare -A vm_recover
declare -A vm_reset_powerstate
declare -A vm_resume
declare -A vm_shutdown
declare -A vm_snapshot
declare -A vm_snapshot_with_quiesce
declare -A vm_start
declare -A vm_suspend
declare -A vm_uninstall
declare -A vm_unpause
declare -A vm_vcpu_hotplug
declare -A vm_vif_list

#Variable declarations===============================================

#Parameter declarations==============================================
appliance_assert_can_be_recovered[database]=""
appliance_assert_can_be_recovered[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list to obtain a list of APPLIANCE UUIDs."
appliance_create[name-description]=""
appliance_create[name-label]=""
appliance_destroy[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list to obtain a list of APPLIANCE UUIDs."
appliance_list[allowed-operations]="Display list of operations allowed on APPLIANCEs"
appliance_list[allowed-operations:contains]=""
appliance_list[current-operations]="Display currently running operations on APPLIANCEs"
appliance_list[current-operations:contains]=""
appliance_list[database]=""
appliance_list[name-description]="Display APPLIANCE name-descriptions"
appliance_list[name-label]="Display APPLIANCE name-labels"
appliance_list[params]=""
appliance_list[uuid]="Display APPLIANCE UUIDs"
appliance_list[VMs]=""
appliance_list[VMs:contains]=""
appliance_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
appliance_param_clear[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list* to obtain a list of APPLIANCE UUIDs."
appliance_param_get[database]=""
appliance_param_get[param-key]="The APPLIANCE map parameter key value to return"
appliance_param_get[param-name]="The APPLIANCE parameter to return"
appliance_param_get[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list* to obtain a list of APPLIANCE UUIDs."
appliance_param_list[database]=""
appliance_param_list[uuid]="Appliance UUID - Use *xe appliance-list* to obtain a list of appliance UUIDs."
appliance_param_set[name-description]="Set name-description of APPLIANCE"
appliance_param_set[name-label]="Set name of APPLIANCE"
appliance_param_set[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list* to obtain a list of APPLIANCE UUIDs."
appliance_recover[database]=""
appliance_recover[force]="Force operation"
appliance_recover[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list to obtain a list of APPLIANCE UUIDs."
appliance_shutdown[force]="Force operation"
appliance_shutdown[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list to obtain a list of APPLIANCE UUIDs."
appliance_start[paused]=""
appliance_start[uuid]="APPLIANCE UUID - Use *xe APPLIANCE-list to obtain a list of APPLIANCE UUIDs."
audit_log_get[filename]=""
audit_log_get[since]=""
bond_create[mac]="Specify the MAC Address to be used by the bond. If no MAC address is specified, *xe bond-create* will use the MAC of the PMI, if it is one of the interfaces in the bond. If the PMI is not part of the bond, but a management interface is, then the bond uses the MAC address of that management interface. "
bond_create[mode]="Specify the type of bond to created. Balance-slb, active-backup and LACP are supported when using openvswitch. Balance-slb and active-backup are supported when using the Linux bridge."
bond_create[network-uuid]="Internal network UUID for the bond(s)- Use *xe network-list* to obtain a list of network UUIDs."
bond_create[pif-uuids]="PIF UUIDs for the bond(s)- Use *xe pif-list* to obtain a list of PIF UUIDs."
bond_create[properties]="Additional bond properties - "
bond_destroy[uuid]="Bond UUID - Use *xe bond-list* to obtain a list of bond UUIDs."
bond_list[all]="Display all parameter values"
bond_list[database]=""
bond_list[links-up]="Display number of links up in bonds"
bond_list[master]="Display master bond PIF UUIDs "
bond_list[--minimal]="Specify --minimal to only show minimal output"
bond_list[mode]="Display bond modes [ balance-slb | active-backup | lacp ]"
bond_list[params]=""
bond_list[primary-slave]="Display primary-slave PIF UUIDs"
bond_list[properties]="Display additional properties for bonds"
bond_list[slaves]="Display slave PIF UUIDs"
bond_list[uuid]="Display bond UUIDs"
bond_param_clear[param-name]="Writable parameter to be cleared. "
bond_param_clear[uuid]="UUID of Bond. Use *xe bond-list* to obtain a list of bond UUIDs."
bond_param_get[database]=""
bond_param_get[param-key]="The bond key to return"
bond_param_get[param-name]="The bond parameter to return."
bond_param_get[uuid]="UUID of bond. Use *xe bond-list* to obtain a list of bonds."
bond_param_list[database]=""
bond_param_list[uuid]="Bond UUID - Use *xe bond-list* to obtain a list of bonds."
bond_param_set[properties]=""
bond_param_set[properties:]="// figure out properties fro a bond"
bond_param_set[uuid]="Bond UUID - Use *xe bond-list* to obtain a list of bonds."
bond_set_mode[mode]="Set bond type: mode=[ balance-slb | active-backup | lacp ] "
bond_set_mode[uuid]="Bond UUID - Use *xe bond-list* to obtain a list of bonds"
cd_list[all]="Display all parameter values"
cd_list[allow-caching]="Display if caching is allowed [ true | false ]"
cd_list[allowed-operations]="Display allowed operations "
cd_list[crashdump-uuids]="Display any crash dump UUIDs"
cd_list[current-operations]="Display current operations "
cd_list[is-a-snapshot]="Display if a CD is a snapshot [ true | false ]"
cd_list[location]="Display the CD filename"
cd_list[managed]="Display if managed [ true | false ]"
cd_list[metadata-latest]="Display latest CD metadata"
cd_list[metadata-of-pool]="Display pool metadata"
cd_list[--minimal]="Specify --minimal to only show minimal output."
cd_list[missing]="Display if the ISO Storage Repository has reported CD missing [ true | false ]"
cd_list[name-description]="Display CD name descriptions"
cd_list[name-label]="Display CD name labels"
cd_list[on-boot]="Display on-boot config"
cd_list[other-config]="Display additional configuration parameter values for CD"
cd_list[params]=""
cd_list[parent]="Display parent disk if CD is part of a chain"
cd_list[physical-utilisation]="Display utilised size in bytes"
cd_list[read-only]="Display if the CD is read-only [ true | false ]"
cd_list[sharable]="Display if the CD is sharable [ true | false ]"
cd_list[sm-config]="Display storage manager device config keys"
cd_list[snapshot-of]="Display UUID of snapshotted CD"
cd_list[snapshots]="Display how many snapshots the CD has"
cd_list[snapshot-time]="Display the time of the snapshot"
cd_list[sr-name-label]="Display name-label of the ISO Storage Repository where the CD resides"
cd_list[sr-uuid]="Display UUID of the ISO Storage Repository where the CD resides"
cd_list[storage-lock]="Display if the disk is locked at the storage level [ true | false ]"
cd_list[tags]="Display tags"
cd_list[type]="Display the CD type [ User | System ]"
cd_list[uuid]="Display CD UUIDs"
cd_list[vbd-uuids]="Display any Virtual Block Device UUIDs"
cd_list[virtual-size]="Display the virtual size in bytes"
cd_list[xenstore-data]="Display data to be inserted into xenstore tree"
console_list[database]=""
console_list[location]="URI for the console service."
console_list[other-config]="A list of key/value pairs that specify additional configuration parameters for the console."
console_list[params]="Specify which parameter(s) to display."
console_list[protocol]="Protocol that the console uses. Return values are VT100(VT100 terminal), RFB(Remote FrameBuffer protocol), or RDP(Remote Desktop Protocol)."
console_list[uuid]="Universally Unique IDentifier for the console. (Autocomplete by using the tab key twice after a reasonable number of characters.) "
console_list[vm-name-label]="User readable name associated with the virtual machine."
console_list[vm-uuid]="Display the Virtual Machine the console currently resides on."
console_param_add[param-key]="Key to be added to a set parameter (SRW)."
console_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe CONSOLE-param-list* to obtain a list of console parameters."
console_param_add[uuid]="CONSOLE UUID - Use *xe CONSOLE-list* to obtain a list of CONSOLE UUIDs."
console_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
console_param_clear[uuid]="CONSOLE UUID - Use *xe CONSOLE-list* to obtain a list of CONSOLE UUIDs."
console_param_get[database]=""
console_param_get[param-key]="The CONSOLE map parameter key value to return"
console_param_get[param-name]="The CONSOLE parameter to return"
console_param_get[uuid]="CONSOLE UUID - Use *xe CONSOLE-list* to obtain a list of CONSOLE UUIDs."
console_param_list[database]=""
console_param_list[uuid]="Console UUID - Use *xe console-list* to obtain a list of console UUIDs."
console_param_remove[param-key]="Key or key/value pair to be removed."
console_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
console_param_remove[uuid]="CONSOLE UUID - Use *xe CONSOLE-list* to obtain a list of CONSOLE UUIDs."
console_param_set[other-config]=""
console_param_set[uuid]="CONSOLE UUID - Use *xe CONSOLE-list* to obtain a list of CONSOLE UUIDs."
diagnostic_net_stats[method]=""
diagnostic_net_stats[params]=""
diagnostic_net_stats[uri]=""
diagnostic_vdi_status[uuid]="VDI UUID - Use *xe vdi-list* to obtain a list of VDI UUIDs."
diagnostic_vm_status[uuid]="VM UUID - Use *xe vm-list* to obtain a list of VM UUIDs."
drtask_create[device-config]="Device configuration"
drtask_create[sr-whitelist]="List of SR UUIDs"
drtask_create[type]=""
drtask_destroy[uuid]="DR task UUID - use *xe drtask-list* to obtain a list of DR task UUIDs"
drtask_list[database]=""
drtask_list[introduced-SRs]=""
drtask_list[params]=""
drtask_list[uuid]="Display DRTASK UUIDs"
drtask_param_get[database]=""
drtask_param_get[param-key]="The DRTASK map parameter key value to return"
drtask_param_get[param-name]="The DRTASK parameter to return"
drtask_param_get[uuid]="DRTASK UUID - Use *xe DRTASK-list* to obtain a list of DRTASK UUIDs."
drtask_param_list[database]=""
event_wait[class]=""
gpu_group_list[all]="Display all parameter values"
gpu_group_list[database]=""
gpu_group_list[--minimal]="Specify --minimal to only show minimal output"
gpu_group_list[name-description]="Display a GPU group name description"
gpu_group_list[name-label]="Display a GPU group name"
gpu_group_list[other-config]="Display additional configuration parameter values for the GPU group"
gpu_group_list[params]=""
gpu_group_list[PGPU-uuids:contains]=""
gpu_group_list[PGPU-uuids]="Display a list of physical GPU UUIDs"
gpu_group_list[uuid]="Display a GPU group UUID"
gpu_group_list[VGPU-uuids:contains]=""
gpu_group_list[VGPU-uuids]="Display a list of virtual GPU UUIDs"
gpu_group_param_add[<MAP PARAMETER KEY>]="Key/value pair to be added to a map parameter (MRW). "
gpu_group_param_add[param-key]="Key to be added to a set parameter (SRW)."
gpu_group_param_add[param-name]="Parameter to have a key or key/value pair added - Use *xe gpu-group-param-list* to obtain a list of GPU group parameters."
gpu_group_param_add[uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain a list of GPU group UUIDs."
gpu_group_param_clear[param-name]="Writable parameter to be cleared (e.g. <WRITABLE PARAMETER>)."
gpu_group_param_clear[uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain GPU group UUIDs."
gpu_group_param_get[database]=""
gpu_group_param_get[param-key]="The GPU group key to return.  "
gpu_group_param_get[param-name]="The GPU group parameter to return."
gpu_group_param_get[uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain a list of GPU group UUIDs."
gpu_group_param_list[database]=""
gpu_group_param_list[uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain a list of GPU group UUIDs."
gpu_group_param_remove[param-key]="Key or key/value pair to be removed."
gpu_group_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
gpu_group_param_remove[uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain GPU group UUIDs."
gpu_group_param_set[name-description]="Set name-description of GPU"
gpu_group_param_set[name-label]="Set name of GPU"
gpu_group_param_set[other-config]=""
gpu_group_param_set[uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain a list of GPU group UUIDs."
host_apply_edition[edition]=""
host_apply_edition[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_apply_edition[license-server-address]=""
host_apply_edition[license-server-port]=""
host_backup[file-name]="Desired filename for Dom0 back up"
host_backup[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on. "
host_bugreport_upload[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_bugreport_upload[http_proxy]=""
host_bugreport_upload[url]=""
host_call_plugin[args]=""
host_call_plugin[fn]=""
host_call_plugin[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_call_plugin[plugin]=""
host_compute_free_memory[<host-selectors>]="Parameters to select a host - use *xe host-list params=all* to get a list of host parameters to filter on. "
host_compute_memory_overhead[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_cpu_info[uuid]="Host UUID - Use *xe host-list* to display Host UUIDs"
host_cpu_list[all]="Display all parameter values"
host_cpu_list[database]=""
host_cpu_list[family]="Display CPU families "
host_cpu_list[flags]="Display CPU flags"
host_cpu_list[host-uuid]="Display XenServer host UUIDs"
host_cpu_list[--minimal]="Specify --minimal to only show minimal output"
host_cpu_list[model]="Display CPU models"
host_cpu_list[modelname]="Display CPU modelnames"
host_cpu_list[number]="Display host CPU numbers"
host_cpu_list[params]=""
host_cpu_list[speed]="Display CPU speeds"
host_cpu_list[stepping]="Display CPU steppings"
host_cpu_list[utilisation]="Display CPU utilisation - Use *xe host-cpu-param-list* or *xe host-cpu-param-get* to display CPU utilisation"
host_cpu_list[uuid]="Display CPU UUIDs"
host_cpu_list[vendor]="Display CPU venders"
host_cpu_param_get[database]=""
host_cpu_param_get[param-key]="The CPU key value to return.  "
host_cpu_param_get[param-name]="The CPU parameter value to return."
host_cpu_param_get[uuid]="CPU UUID - Use *xe host-cpu-list* to obtain a list of CPU UUIDs."
host_cpu_param_list[database]=""
host_cpu_param_list[uuid]="Host CPU UUID - Use *xe host-cpu-list* to obtain a list of host CPU UUIDs."
host_crashdump_destroy[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_crashdump_list[database]=""
host_crashdump_list[host-uuid]=""
host_crashdump_list[params]=""
host_crashdump_list[size]=""
host_crashdump_list[timestamp]=""
host_crashdump_list[uuid]="Display HOST UUIDs"
host_crashdump_param_get[database]=""
host_crashdump_param_get[param-key]="The HOST map parameter key value to return"
host_crashdump_param_get[param-name]="The HOST parameter to return"
host_crashdump_param_get[uuid]="HOST UUID - Use *xe HOST-list* to obtain a list of HOST UUIDs."
host_crashdump_param_list[database]=""
host_crashdump_param_list[uuid]="host-crashdump UUID - Use *xe host-crashdump-list* to obtain a list of host-crashdump UUIDs."
host_crashdump_upload[http_proxy]=""
host_crashdump_upload[url]=""
host_crashdump_upload[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_data_source_forget[data-source]=""
host_data_source_forget[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_data_source_list[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_data_source_query[data-source]=""
host_data_source_query[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_data_source_record[data-source]=""
host_data_source_record[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_declare_dead[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_disable[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_disable_local_storage_caching[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_dmesg[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on. "
host_emergency_ha_disable[force]="Force operation"
host_emergency_management_reconfigure[interface]=""
host_enable[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_enable_local_storage_caching[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_enable_local_storage_caching[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
host_enable[--multiple]="Specify --multiple if you want to match more than one host."
host_evacuate[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_evacuate[--multiple]="Specify --multiple if you want to match more than one host."
host_forget[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_get_cpu_features[uuid]="Host UUID - Use *xe host-list* to obtain Host UUIDs."
host_get_server_certificate[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_get_sm_diagnostics[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_get_system_status_capabilities[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_get_system_status[entries]="Comma-separated list of system status entries"
host_get_system_status[filename]="Desired system status archive filename "
host_get_system_status[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_get_system_status[--multiple]="Specify --multiple if you want to match more than one host."
host_get_system_status[output]="Compression output for system status file  [ tar | tar.bz2 | zip ]"
host_get_thread_diagnostics[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_get_vms_which_prevent_evacuation[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_license_view[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_list[address]="Display XCP host IP addresses "
host_list[all]="Display all parameter values"
host_list[allowed-operations:contains]=""
host_list[allowed-operations]="Display allowed-operations for XCP hosts"
host_list[API-version-major]="Display API major version number"
host_list[API-version-minor]="Display API minor version number"
host_list[API-version-vendor]="Display identification of API vendor"
host_list[API-version-vendor-implementation]="Display details of vendor implementation"
host_list[blobs]="Display binary data stores"
host_list[capabilities:contains]=""
host_list[capabilities]="Display a list of Xen versions that the XCP host can run"
host_list[chipset-info]="Display chipset-info map parameter key/values"
host_list[cpu_info]="Display cpu-info for XCP hosts"
host_list[crash-dump-sr-uuid]="Display the Storage Repository UUID for crash dumps"
host_list[current-operations:contains]=""
host_list[current-operations]="Display current-operations for XCP hosts"
host_list[database]=""
host_list[edition]="Dispaly edition information "
host_list[enabled]="Display host's enabled status [ true | false ]"
host_list[external-auth-configuration]="Display external authentication configurations"
host_list[external-auth-service-name]="Display names of external authentication services "
host_list[external-auth-type]="Display external authentication type"
host_list[guest_VCPUs_params]=""
host_list[ha-network-peers]="Display host UUIDs that could host the VMs on this host in case of failure."
host_list[ha-statefiles]="Display HA statefile UUIDs"
host_list[host-metrics-live]="Display host operational status [ true | false ]"
host_list[hostname]="Display XCP host hostnames"
host_list[license-server]="Display license-server map parameter key/values "
host_list[local-cache-sr]="Display the Storage Repository UUID for local cache (IntelliCache)"
host_list[logging]="Display logging configuration"
host_list[memory-free-computed]="Display a conservative estimate of the maximum amount of memory free on a XCP host"
host_list[memory-free]="Display total amount of un-allocated physical RAM on the XCP host, in bytes."
host_list[memory-overhead]="Dispaly memory overhead due to virtualization, in bytes."
host_list[memory-total]="Display total amount of physical RAM on the XCP host, in bytes."
host_list[--minimal]="Specify --minimal to only show minimal output"
host_list[name-description]="Display host name-descriptions"
host_list[name-label]="Display host name-labels"
host_list[other-config]="Display other-config map parameter key/value pairs"
host_list[params]=""
host_list[patches:contains]=""
host_list[patches]="Display sets of host patches"
host_list[power-on-config]="Display Host Power On configuration parameters"
host_list[power-on-mode]="Display Host Power On mode"
host_list[software-version]="Display software-version parameters"
host_list[supported-bootloaders:contains]=""
host_list[supported-bootloaders]="Display a list of bootloaders supported by XCP hosts"
host_list[suspend-image-sr-uuid]="Display the Storage Repository UUID for suspended images"
host_list[tags:contains]=""
host_list[tags]="Display writable tag parameters"
host_list[uuid]="Display host UUIDs"
host_logs_download[file-name]="Desired file name for XenServer log(s)"
host_logs_download[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on. "
host_management_reconfigure[pif-uuid]=""
host_param_add[param-key]="Key to be added to a set parameter (SRW)."
host_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe HOST-param-list* to obtain a list of host parameters."
host_param_add[uuid]="HOST UUID - Use *xe HOST-list* to obtain a list of HOST UUIDs."
host_param_clear[param-name]="Writable parameter to be cleared (e.g name-description)."
host_param_clear[uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_param_get[database]=""
host_param_get[param-key]="The HOST map parameter key value to return"
host_param_get[param-name]="The HOST parameter to return"
host_param_get[uuid]="HOST UUID - Use *xe HOST-list* to obtain a list of HOST UUIDs."
host_param_list[database]=""
host_param_list[uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_param_remove[param-key]="Key or key/value pair to be removed."
host_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
host_param_remove[uuid]="HOST UUID - Use *xe HOST-list* to obtain a list of HOST UUIDs."
host_param_set[crash-dump-sr-uuid]=""
host_param_set[guest_VCPUs_params]=""
host_param_set[logging]=""
host_param_set[name-description]="Set name-description of HOST"
host_param_set[name-label]="Set name of HOST"
host_param_set[other-config]=""
host_param_set[suspend-image-sr-uuid]=""
host_param_set[uuid]="HOST UUID - Use *xe HOST-list* to obtain a list of HOST UUIDs."
host_power_on[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_reboot[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_reboot[--multiple]="Specify --multiple if you want to match more than one host."
host_reset_cpu_features[uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs"
host_restore[file-name]=""
host_restore[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_send_debug_keys[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_send_debug_keys[keys]=""
host_set_cpu_features[features]="32-digit hexadecimal CPU feature mask"
host_set_cpu_features[uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs"
host_set_hostname_live[host-name]=""
host_set_hostname_live[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_set_hostname_live[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
host_set_power_on_mode[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_set_power_on_mode[power-on-config]=""
host_set_power_on_mode[power-on-mode]=""
host_shutdown[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_shutdown[<parameter>=<PARAMETER>]="*xe host-shutdown* uses the common host selector mechanism."
host_sm_dp_destroy[allow-leak]=""
host_sm_dp_destroy[dp]=""
host_sm_dp_destroy[uuid]="HOST UUID - Use *xe HOST-list to obtain a list of HOST UUIDs."
host_sync_data[<host-selectors>]="Parameters to select host(s) - use *xe host-list params=all* to get a list of host parameters to filter on."
host_syslog_reconfigure[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
log_set_output[key]=""
log_set_output[level]=""
log_set_output[output]=""
message_create[body]="Message body"
message_create[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs"
message_create[name]="Message name"
message_create[pool-uuid]="Resource pool UUID - Use *pool-list* to obtain a list of pool UUIDs"
message_create[priority]="Message priority"
message_create[sr-uuid]="Storage repository UUID - Use *sr-list* to obtain a list of SR UUIDs"
message_create[vm-uuid]="Virtual machine UUID - Use *xe vm-list* to obtain a list of VM UUIDs"
message_destroy[uuid]="Message UUID - use *xe message-list* to obtain a list of message UUIDs"
message_list[all]="Display all parameter values"
message_list[body]="Display body of message (description)"
message_list[class]=""
message_list[database]=""
message_list[name]="Display message name"
message_list[obj-uuid]=""
message_list[params]=""
message_list[priority]="Display priority number"
message_list[timestamp]="Display timestamp"
message_list[uuid]="Display message UUID"
message_param_get[database]=""
message_param_get[param-key]="The message key to return.  "
message_param_get[param-name]="The message parameter to return."
message_param_get[uuid]="Message UUID - Use *xe message-list* to obtain a list of message UUIDs."
message_param_list[database]=""
message_param_list[uuid]="Message UUID - Use *xe message-list* to obtain a list of message UUIDs."
network_create[MTU]="MTU for the network. The MTU default is 1500.	"
network_create[name-description]="Description of the network"
network_create[name-label]="Name of the network"
network_destroy[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
network_list[all]="Display all parameter values"
network_list[blobs]="Display binary data stores"
network_list[bridge]="Display network bridge names"
network_list[database]=""
network_list[default-locking-mode]=""
network_list[--minimal]="Specify --minimal to only show minimal output"
network_list[MTU]="Display network MTU values"
network_list[name-description]="Display network descriptions"
network_list[name-label]="Display network name-labels"
network_list[other-config]=""
network_list[other-config:ethtool-autoneg]="Display ethernet Autonegotiation status [ on | off ]"
network_list[other-config:ethtool-gso]="Display generic segmentation offload status [ on | off ]"
network_list[other-config:ethtool-rx]="Display receive checksum status [ on | off ]"
network_list[other-config:ethtool-sg]="Display scatter gather status [ on | off ]"
network_list[other-config:ethtool-tso]="Display TCP segmentation offload status [ on | off ]"
network_list[other-config:ethtool-tx]="Display transmit checksum status [ on | off ]"
network_list[other-config:ethtool-ufo]="Display UDP fragment offload status [ on | off ]"
network_list[other-config:static-routes]="Display comma seperated list of Static routes present on network [ <SOURCE NETWORK ADDRESS>/<CIDR MASK>/<NEXT HOP ADDRESS> ] "
network_list[params]=""
network_list[PIF-uuids:contains]=""
network_list[PIF-uuids]="Display PIFs attached to networks"
network_list[tags:contains]=""
network_list[tags]="Display writable tag parameters"
network_list[uuid]="Display network UUIDs"
network_list[VIF-uuids:contains]=""
network_list[VIF-uuids]="Display VIFs attached to networks"
network_param_add[<MAP PARAMETER KEY>]="Key/value pair to be added to a map parameter (MRW). "
network_param_add[param-key]="Key to be added to a set parameter (SRW)."
network_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe network-param-list* to obtain a list of network parameters."
network_param_add[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
network_param_clear[param-name]="Writable parameter to be cleared (e.g. name-description)."
network_param_clear[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
network_param_get[database]=""
network_param_get[param-key]="The network key value to return.  "
network_param_get[param-name]="The network parameter value to return."
network_param_get[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
network_param_list[database]=""
network_param_list[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
network_param_remove[param-key]="Key or key/value pair to be removed."
network_param_remove[param-name]="Parameter that contains keys or key/value pairs (e.g. other-config)."
network_param_remove[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
network_param_set[default-locking-mode]="Set switchport locking mode: default-locking-mode=[ disabled | unlocked ]	"
network_param_set[MTU]="Set MTU size for a network"
network_param_set[name-description]="Set description of network"
network_param_set[name-label]="Set name of network"
network_param_set[other-config]=""
network_param_set[other-config:ethtool-autoneg]="Set to enable autonegotiation: ethtool-autoneg=[ on | off ]	"
network_param_set[other-config:ethtool-gso]="Set to enable generic segmentation offload: ethtool-gso=[ on | off ]	"
network_param_set[other-config:ethtool-rx]="Set to enable receive checksum: ethtool-rx=[ on | off ]	"
network_param_set[other-config:ethtool-sg]="Set to enable scatter gather: ethtool-sg=[ on | off ]	"
network_param_set[other-config:ethtool-tso]="Set to enable TCP segmentation offload: ethtool-tso=[ on | off ]	"
network_param_set[other-config:ethtool-tx]="Set to enable transmit checksum: ethtool-tx=[ on | off ]	"
network_param_set[other-config:ethtool-ufo]="Set to enable UDP fragment offload: ethtool-ufo=[ on | off ]	"
network_param_set[other-config:static-routes]="Set one or more static routes (separate with commas): static-routes=[ <SOURCE NETWORK ADDRESS>/<CIDR MASK>/<NEXT HOP ADDRESS> ]		"
network_param_set[uuid]="Network UUID - Use *xe network-list* to obtain a list of network UUIDs."
patch_apply[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of hosts."
patch_apply[uuid]="Patch UUID - Use *xe patch-list* to obtain a list of patches."
patch_clean[uuid]="PATCH UUID - Use *xe PATCH-list to obtain a list of PATCH UUIDs."
patch_destroy[uuid]="PATCH UUID - Use *xe PATCH-list to obtain a list of PATCH UUIDs."
patch_list[after-apply-guidance]=""
patch_list[after-apply-guidance:contains]=""
patch_list[database]=""
patch_list[hosts]=""
patch_list[hosts:contains]=""
patch_list[name-description]="Display PATCH name-descriptions"
patch_list[name-label]="Display PATCH name-labels"
patch_list[params]=""
patch_list[size]=""
patch_list[uuid]="Display PATCH UUIDs"
patch_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
patch_param_clear[uuid]="PATCH UUID - Use *xe PATCH-list* to obtain a list of PATCH UUIDs."
patch_param_get[database]=""
patch_param_get[param-key]="The PATCH map parameter key value to return"
patch_param_get[param-name]="The PATCH parameter to return"
patch_param_get[uuid]="PATCH UUID - Use *xe PATCH-list* to obtain a list of PATCH UUIDs."
patch_param_list[database]=""
patch_param_list[uuid]="Patch UUID - Use *xe patch-list* to obtain a list of patch UUIDs."
patch_pool_apply[uuid]="PATCH UUID - Use *xe PATCH-list to obtain a list of PATCH UUIDs."
patch_pool_clean[uuid]="PATCH UUID - Use *xe PATCH-list to obtain a list of PATCH UUIDs."
patch_precheck[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
patch_precheck[uuid]="PATCH UUID - Use *xe PATCH-list to obtain a list of PATCH UUIDs."
patch_upload[file-name]=""
pbd_create[device-config]=""
pbd_create[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
pbd_create[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
pbd_destroy[uuid]="PBD UUID - Use *xe PBD-list to obtain a list of PBD UUIDs."
pbd_list[all]="Display all parameter values"
pbd_list[currently-attached]="Display currently-attached status [ true | false ]"
pbd_list[database]=""
pbd_list[device-config]="Display additional configuration information "
pbd_list[host]=""
pbd_list[host-name-label]=""
pbd_list[host-uuid]="Display PBD's Host UUID"
pbd_list[--minimal]="Specify --minimal to only show minimal output"
pbd_list[other-config]="Display other-config map parameter key/value pairs // add more??	"
pbd_list[params]=""
pbd_list[sr-name-label]=""
pbd_list[sr-uuid]="Display PBD's Storage Repository"
pbd_list[uuid]="Display PBD UUIDs"
pbd_param_add[param-key]="Key to be added to a set parameter (SRW)."
pbd_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe PBD-param-list* to obtain a list of pbd parameters."
pbd_param_add[uuid]="PBD UUID - Use *xe PBD-list* to obtain a list of PBD UUIDs."
pbd_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
pbd_param_clear[uuid]="PBD UUID - Use *xe PBD-list* to obtain a list of PBD UUIDs."
pbd_param_get[database]=""
pbd_param_get[param-key]="The PBD map parameter key value to return"
pbd_param_get[param-name]="The PBD parameter to return"
pbd_param_get[uuid]="PBD UUID - Use *xe PBD-list* to obtain a list of PBD UUIDs."
pbd_param_list[database]=""
pbd_param_list[uuid]="PBD UUID - Use *xe pbd-list* to obtain a list of PBD UUIDs."
pbd_param_remove[param-key]="Key or key/value pair to be removed."
pbd_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
pbd_param_remove[uuid]="PBD UUID - Use *xe PBD-list* to obtain a list of PBD UUIDs."
pbd_param_set[other-config]=""
pbd_param_set[uuid]="PBD UUID - Use *xe PBD-list* to obtain a list of PBD UUIDs."
pbd_plug[uuid]="PBD UUID - Use *xe PBD-list to obtain a list of PBD UUIDs."
pbd_unplug[uuid]="PBD UUID - Use *xe PBD-list to obtain a list of PBD UUIDs."
pgpu_list[all]="Display all parameter values"
pgpu_list[database]=""
pgpu_list[dependencies]=""
pgpu_list[dependencies:contains]=""
pgpu_list[device-name]="Display physical GPU device name"
pgpu_list[gpu-group-name-label]="Display GPU group name "
pgpu_list[gpu-group-uuid]="Display GPU group UUID"
pgpu_list[host-name-label]="Display hostname"
pgpu_list[host-uuid]="Display host UUID"
pgpu_list[--minimal]="Specify --minimal to only show minimal output"
pgpu_list[other-config]="Display additional configuration parameter values for physical GPU"
pgpu_list[params]=""
pgpu_list[pci-id]="PCI identifier"
pgpu_list[uuid]="Display physical GPU UUID"
pgpu_list[vendor-name]="Display physical GPU vendor name"
pgpu_param_add[param-key]="Key to be added to a set parameter (SRW)."
pgpu_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe PGPU-param-list* to obtain a list of pgpu parameters."
pgpu_param_add[uuid]="PGPU UUID - Use *xe PGPU-list* to obtain a list of PGPU UUIDs."
pgpu_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
pgpu_param_clear[uuid]="PGPU UUID - Use *xe PGPU-list* to obtain a list of PGPU UUIDs."
pgpu_param_get[database]=""
pgpu_param_get[param-key]="The PGPU map parameter key value to return"
pgpu_param_get[param-name]="The PGPU parameter to return"
pgpu_param_get[uuid]="PGPU UUID - Use *xe PGPU-list* to obtain a list of PGPU UUIDs."
pgpu_param_list[database]=""
pgpu_param_list[uuid]="PGPU UUID - Use *xe pgpu-list* to obtain a list of PGPU UUIDs."
pgpu_param_remove[param-key]="Key or key/value pair to be removed."
pgpu_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
pgpu_param_remove[uuid]="PGPU UUID - Use *xe PGPU-list* to obtain a list of PGPU UUIDs."
pgpu_param_set[other-config]=""
pgpu_param_set[uuid]="PGPU UUID - Use *xe PGPU-list* to obtain a list of PGPU UUIDs."
pif_forget[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF interface UUIDs."
pif_introduce[device]="The host's physical network interface card (e.g. eth0)."
pif_introduce[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
pif_introduce[mac]="MAC Address for new PIF."
pif_list[all]="Display all parameter values"
pif_list[bond-master-of]="Display bond master UUIDs"
pif_list[bond-slave-of]="Display bond slave UUIDs"
pif_list[carrier]="Display if Ethernet link is detected [ true | false ]"
pif_list[currently-attached]="Display if the PIF is attached to the physical network interface [ true | false ]	"
pif_list[database]=""
pif_list[device]="Display physical network interfaces (e.g. eth0)"
pif_list[device-id]="Display NIC vendor device-id numbers"
pif_list[device-name]="Display NIC vendor device-name"
pif_list[disallow-unplug]="Display disallow-unplug protection settings [ true | false ]"
pif_list[DNS]="Display DNS addresses"
pif_list[duplex]="Display duplex settings [ full | half ]"
pif_list[gateway]="Display gateway addresses "
pif_list[host-name-label]="Display host name-labels"
pif_list[host-uuid]="Display host UUIDs"
pif_list[io_read_kbs]="Display the average receive rate in kB/s"
pif_list[io_write_kbs]="Display the average transmit rate in kB/s"
pif_list[IP-configuration-mode]="Display IP configuration mode [ DHCP | static ]"
pif_list[IP]="Display IP addresses"
pif_list[IPv6]=""
pif_list[IPv6-configuration-mode]=""
pif_list[IPv6-gateway]=""
pif_list[MAC]="Display MAC addresses "
pif_list[management]="Display if PIF is a management interface  [ true | false ]"
pif_list[--minimal]="Specify --minimal to only show minimal output"
pif_list[MTU]="Display MTU values"
pif_list[netmask]="Display netmasks"
pif_list[network-name-label]="Display network name-labels"
pif_list[network-uuid]="Display network UUIDs"
pif_list[other-config]=""
pif_list[other-config:bond-downdelay]="Display the number of milliseconds the bond waits after the link is lost before considering the link down. Default is 200ms."
pif_list[other-config:bond-miimon]="Display the time between link liveness checks, in milliseconds."
pif_list[other-config:bond-updelay]="Display the number of milliseconds the bond waits after the link comes up before considering it up. Default is 31s."
pif_list[other-config:domain]="Display DNS search path ( DNS suffix )."
pif_list[other-config:ethtool-autoneg]="Display configured ethernet autonegotiation [ on | off ]"
pif_list[other-config:ethtool-gso]="Display configured generic segmentation offload status [ on | off ]"
pif_list[other-config:ethtool-rx]="Display configured receive checksum status [ on | off ]"
pif_list[other-config:ethtool-sg]="Display configured scatter gather status [ on | off]"
pif_list[other-config:ethtool-speed]="Display configured speed of PIF interface in Mbps."
pif_list[other-config:ethtool-tso]="Display configured TCP segmentation offload status [ on | off ]"
pif_list[other-config:ethtool-tx]="Display configured transmit checksum status [ on | off ]"
pif_list[other-config:ethtool-ufo]="Display configured UDP fragment offload status [ on | off ]"
pif_list[params]=""
pif_list[pci-bus-path]="Display PCI bus path addresses"
pif_list[physical]="Display if the PIF is a physical device [ true | false ]  "
pif_list[primary-address-type]=""
pif_list[speed]="Display NIC speeds"
pif_list[tunnel-access-PIF-of]="Display tunnel-access UUIDs"
pif_list[tunnel-transport-PIF-of]="Display tunnel-transport UUIDs"
pif_list[uuid]="Display PIF UUIDs"
pif_list[vendor-id]="Display NIC vendr IDs"
pif_list[vendor-name]="Display NIC vendor names"
pif_list[VLAN]="Display VLAN tags	"
pif_param_add[<MAP PARAMETER KEY>]="Key/value pair to be added to a map parameter (MRW)"
pif_param_add[param-key]="Key to be added to a set parameter (SRW)"
pif_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe pif-param-list* to obtain a list of PIF parameters."
pif_param_add[uuid]="PIF UUID - Use *xe pif-list* to obtain a list of PIF UUIDs."
pif_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config). "
pif_param_clear[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF UUIDs."
pif_param_get[database]=""
pif_param_get[param-key]="The PIF map parameter key value to return"
pif_param_get[param-name]="The PIF parameter value to return	"
pif_param_get[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF UUIDs."
pif_param_list[database]=""
pif_param_list[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF UUIDs."
pif_param_remove[param-key]="Key or key/value pair to be removed."
pif_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
pif_param_remove[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF UUIDs."
pif_param_set[disallow-unplug]="Set disallow-unplug on a PIF: disallow-unplug=[ true | false ]"
pif_param_set[other-config]=""
pif_param_set[other-config:bond-downdelay]="Set number of milliseconds the bond waits after the link is lost before considering the link down. Default is 200ms. "
pif_param_set[other-config:bond-miimon]="Set the time between link liveness checks on the bond, in milliseconds.	"
pif_param_set[other-config:bond-updelay]="Set number of milliseconds the bond waits after the link comes up before considering it up. Default is 31s."
pif_param_set[other-config:domain]="Set the DNS search path (DNS Suffix). Use a comma as a field separator."
pif_param_set[other-config:ethtool-autoneg]="Set autonegotiation status on PIF: ethtool-autoneg=[ on | off ]"
pif_param_set[other-config:ethtool-duplex]="Set duplex mode of PIF: ethtool-duplex=[ full | half ]"
pif_param_set[other-config:ethtool-gso]="Enable generic segmentation offload: ethtool-gso=[ on | off ]"
pif_param_set[other-config:ethtool-rx]="Enable receive checksum: ethtool-rx=[ on | half ]"
pif_param_set[other-config:ethtool-sg]="Enable scatter gather:  ethtool-sg=[ on | off ]"
pif_param_set[other-config:ethtool-speed]="Set speed of PIF interface in Mbps: ethtool-speed=[ 10 | 100 | 1000 ]"
pif_param_set[other-config:ethtool-tso]="Enable TCP segmentation offload: ethtool-tso=[ on | off ]"
pif_param_set[other-config:ethtool-tx]="Enable transmit checksum: ethtool-tx=[ on | off ]"
pif_param_set[other-config:ethtool-ufo]="Enable UDP fragment offload: ethtool-ufo=[ on | off ]"
pif_param_set[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF interface UUIDs."
pif_plug[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF interface UUIDs."
pif_reconfigure_ip[DNS]="Name server addresses - Use a comma to seperate multiple name servers "
pif_reconfigure_ip[gateway]="Gateway address"
pif_reconfigure_ip[IP]="IPv4 Host address of PIF. Address is required for static mode."
pif_reconfigure_ip[mode]="Addressing mode for PIF: mode=[ dhcp | static | none ]"
pif_reconfigure_ip[netmask]="Netmask address of PIF"
pif_reconfigure_ip[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF UUIDs"
pif_reconfigure_ipv6[DNS]="Name server addresses - Use a comma to seperate multiple name servers "
pif_reconfigure_ipv6[gateway]="Gateway address"
pif_reconfigure_ipv6[IPv6]="PIF IPv6 address. Address is only required for static mode."
pif_reconfigure_ipv6[mode]="Addressing mode for the PIF: mode=*[ dhcp | static | autoconf | none ]*"
pif_reconfigure_ipv6[uuid]="PIF UUID - Use *xe pif-list* to obtain PIF interface UUIDs"
pif_scan[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
pif_scan[uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs. "
pif_set_primary_address_type[primary_address_type]="Primary address type: primary_address_type=*[ IPV4 | IPV6 ]*"
pif_set_primary_address_type[uuid]="PIF UUID - Use *xe pif-list* to obtain a list PIF UUIDs."
pif_unplug[uuid]="PIF UUID - Use *xe pif-list* to obtain a list of PIF interface UUIDs."
pool_apply_edition[edition]=""
pool_apply_edition[license-server-address]=""
pool_apply_edition[license-server-port]=""
pool_apply_edition[uuid]="POOL UUID - Use *xe POOL-list to obtain a list of POOL UUIDs."
pool_certificate_install[filename]=""
pool_certificate_uninstall[name]=""
pool_crl_install[filename]=""
pool_crl_uninstall[name]=""
pool_designate_new_master[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
pool_disable_external_auth[config]=""
pool_disable_external_auth[uuid]="POOL UUID - Use *xe POOL-list to obtain a list of POOL UUIDs."
pool_disable_local_storage_caching[uuid]="POOL UUID - Use *xe POOL-list to obtain a list of POOL UUIDs."
pool_dump_database[file-name]=""
pool_eject[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
pool_emergency_reset_master[master-address]=""
pool_enable_external_auth[auth-type]=""
pool_enable_external_auth[config]=""
pool_enable_external_auth[service-name]=""
pool_enable_external_auth[uuid]="POOL UUID - Use *xe POOL-list to obtain a list of POOL UUIDs."
pool_enable_local_storage_caching[uuid]="POOL UUID - Use *xe POOL-list to obtain a list of POOL UUIDs."
pool_enable_redo_log[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
pool_ha_compute_hypothetical_max_host_failures_to_tolerate[restart-priority]=""
pool_ha_compute_hypothetical_max_host_failures_to_tolerate[vm-uuid]="Virtual machine UUID - Use *xe vm-list* to obtain a list of VM UUIDs"
pool_ha_enable[ha-config]=""
pool_ha_enable[heartbeat-sr-uuids]=""
pool_join[force]="Force operation"
pool_join[master-address]=""
pool_join[master-password]=""
pool_join[master-username]=""
pool_list[all]="Display all parameter values"
pool_list[blobs]="Display binary data stores"
pool_list[crash-dump-SR]="Display crash-dump Storage Repository UUIDs"
pool_list[database]=""
pool_list[default-SR]="Display default Storage Repository UUIDs"
pool_list[gui-config]="Display pool gui-configs"
pool_list[ha-allow-overcommit]="Display overcommited aviability [ true | false ]"
pool_list[ha-configuration]="Display HA configurations"
pool_list[ha-enabled]="Display HA statuses [ true | false ]"
pool_list[ha-host-failures-to-tolerate]="Display number of host failures needed before sending an alert "
pool_list[ha-overcommitted]="Display overcommited statuses [ true | false ]"
pool_list[ha-plan-exists-for]="Display number of host failures that can be handled"
pool_list[ha-statefiles]="Display VDI UUIDs used by HA to determine storage health"
pool_list[license-state]=""
pool_list[master]="Display pool master UUIDs"
pool_list[--minimal]="Specify --minimal to only show minimal output"
pool_list[name-description]="Display pool name-descriptions "
pool_list[name-label]="Display pool name-labels"
pool_list[other-config:auto_poweron]="Display pools VM auto power on status [ true | false ]"
pool_list[other-config:cpuid_feature_mask]="Display pools cpuid feature masks"
pool_list[other-config]="Display list of map parameter key/values for a pool"
pool_list[params]=""
pool_list[restrictions]="Display pool restrictions"
pool_list[supported-sr-types]="Display supported Storage Repository types"
pool_list[suspend-image-SR]="Display suspended VM Storage Repository UUIDs"
pool_list[tags:contains]=""
pool_list[tags]="Display tags"
pool_list[uuid]="Display pool UUIDs"
pool_list[wlb-enabled]="Display WLB status [ true | false ]"
pool_list[wlb-url]="Display URLs of WLB servers"
pool_list[wlb-username]="Display WLB usernames"
pool_list[wlb-verify-cert]="Display WLB certificate status requirement [ true | false ]"
pool_param_add[<MAP PARAMETER KEY>]="Key/value pair to be added to a map parameter (MRW). "
pool_param_add[param-key]="Key to be added to a set parameter (SRW)."
pool_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe pool-param-list* to obtain a list of network parameters."
pool_param_add[uuid]="Pool UUID - Use *xe pool-list* to obtain a list of pool UUIDs."
pool_param_clear[param-name]="Writable parameter to be cleared (e.g. *gui-config*)."
pool_param_clear[uuid]="Pool UUID - Use *xe pool-list* to obtain pool UUIDs."
pool_param_get[database]=""
pool_param_get[param-key]="The POOL map parameter key value to return"
pool_param_get[param-name]="The POOL parameter to return"
pool_param_get[uuid]="POOL UUID - Use *xe POOL-list* to obtain a list of POOL UUIDs."
pool_param_list[database]=""
pool_param_list[uuid]="Pool UUID - Use *xe pool-list* to obtain a list of pool UUIDs."
pool_param_remove[param-key]="Key or key/value pair to be removed."
pool_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
pool_param_remove[uuid]="POOL UUID - Use *xe POOL-list* to obtain a list of POOL UUIDs."
pool_param_set[crash-dump-SR]=""
pool_param_set[default-SR]=""
pool_param_set[gui-config]=""
pool_param_set[ha-allow-overcommit]=""
pool_param_set[ha-host-failures-to-tolerate]=""
pool_param_set[name-description]="Set name-description of POOL"
pool_param_set[name-label]="Set name of POOL"
pool_param_set[other-config]=""
pool_param_set[suspend-image-SR]=""
pool_param_set[uuid]="POOL UUID - Use *xe POOL-list* to obtain a list of POOL UUIDs."
pool_restore_database[dry-run]=""
pool_restore_database[file-name]=""
pool_send_test_post[body]=""
pool_send_test_post[dest-host]=""
pool_send_test_post[dest-port]=""
pool_vlan_create[network-uuid]="Internal network to be connected to VLAN's untagged PIFs - Use *xe network-list* to obtain a list of networks found in a pool."
pool_vlan_create[pif-uuid]="Physical PIFs to be the tagged-PIFs for the VLAN. The pseudo PIFs (untagged-PIF) are associated with the physical PIFs. - Use *xe pif-list* to obtain a list of PIF interfaces."
pool_vlan_create[vlan]="Desired VLAN tag"
role_list[database]=""
role_list[description]=""
role_list[name]=""
role_list[params]=""
role_list[uuid]="Display ROLE UUIDs"
role_param_get[database]=""
role_param_get[param-key]="The ROLE map parameter key value to return"
role_param_get[param-name]="The role parameter to return."
role_param_get[uuid]="Role UUID - Use *xe role-list* to obtain a list of role UUIDs."
role_param_list[database]=""
role_param_list[uuid]="Role UUID - Use *xe role-list* to obtain a list of role UUIDs."
secret_create[value]=""
secret_destroy[uuid]="SECRET UUID - Use *xe SECRET-list to obtain a list of SECRET UUIDs."
secret_list[database]=""
secret_list[params]=""
secret_list[uuid]="Display SECRET UUIDs"
secret_list[value]=""
secret_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
secret_param_clear[uuid]="SECRET UUID - Use *xe SECRET-list* to obtain a list of SECRET UUIDs."
secret_param_get[database]=""
secret_param_get[param-key]="The SECRET map parameter key value to return"
secret_param_get[param-name]="The SECRET parameter to return"
secret_param_get[uuid]="SECRET UUID - Use *xe SECRET-list* to obtain a list of SECRET UUIDs."
secret_param_list[database]=""
secret_param_list[uuid]="Secret UUID - Use *xe secret-list* to obtain a list of secret UUIDs."
secret_param_set[uuid]="SECRET UUID - Use *xe SECRET-list* to obtain a list of SECRET UUIDs."
secret_param_set[value]=""
session_subject_identifier_logout[subject-identifier]=""
sm_list[capabilities]=""
sm_list[configuration]=""
sm_list[copyright]=""
sm_list[database]=""
sm_list[driver-filename]=""
sm_list[features]=""
sm_list[name-description]="Display SM name-descriptions"
sm_list[name-label]="Display SM name-labels"
sm_list[params]=""
sm_list[required-api-version]=""
sm_list[type]=""
sm_list[uuid]="Display SM UUIDs"
sm_list[vendor]=""
sm_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
sm_param_clear[uuid]="SM UUID - Use *xe SM-list* to obtain a list of SM UUIDs."
sm_param_get[database]=""
sm_param_get[param-key]="The SM map parameter key value to return"
sm_param_get[param-name]="The SM parameter to return"
sm_param_get[uuid]="SM UUID - Use *xe SM-list* to obtain a list of SM UUIDs."
sm_param_list[database]=""
sm_param_list[uuid]="SM UUID - Use *xe sm-list* to obtain a list of SM UUIDs."
snapshot_clone[all]="Display all parameter values"
snapshot_clone[--minimal]="Specify --minimal to only show minimal output"
snapshot_clone[new-name-description]="Desired new name-description for SNAPSHOT"
snapshot_clone[new-name-label]="Desired new name-label for SNAPSHOT"
snapshot_clone[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list to obtain a list of SNAPSHOT UUIDs."
snapshot_copy[all]="Display all parameter values"
snapshot_copy[--minimal]="Specify --minimal to only show minimal output"
snapshot_copy[new-name-description]="Desired new name-description for SNAPSHOT"
snapshot_copy[new-name-label]="Desired new name-label for SNAPSHOT"
snapshot_copy[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
snapshot_copy[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list to obtain a list of SNAPSHOT UUIDs."
snapshot_destroy[all]="Display all parameter values"
snapshot_destroy[--minimal]="Specify --minimal to only show minimal output"
snapshot_destroy[snapshot-uuid]="Snapshot UUID - Use *xe snapshot-list* to obtain a list of snapshot UUIDs."
snapshot_destroy[uuid]="UUID - Use *xe snapshot-list* to obtain a list of snapshot UUIDs."
snapshot_disk_list[all]="Display all parameter values"
snapshot_disk_list[--minimal]="Specify --minimal to only show minimal output"
snapshot_disk_list[snapshot-uuid]=""
snapshot_disk_list[uuid]="Display SNAPSHOT UUIDs"
snapshot_disk_list[vbd-params]=""
snapshot_disk_list[vdi-params]=""
snapshot_disk_list[<vm-selectors>]=""
snapshot_export_to_template[all]="Display all parameter values"
snapshot_export_to_template[filename]=""
snapshot_export_to_template[--minimal]="Specify --minimal to only show minimal output"
snapshot_export_to_template[preserve-power-state]=""
snapshot_export_to_template[snapshot-uuid]=""
snapshot_list[actions-after-crash]=""
snapshot_list[actions-after-reboot]=""
snapshot_list[actions-after-shutdown]=""
snapshot_list[affinity]=""
snapshot_list[all]="Display all parameter values"
snapshot_list[allowed-operations]="Display list of operations allowed on SNAPSHOTs"
snapshot_list[allowed-operations:contains]=""
snapshot_list[allowed-VBD-devices]=""
snapshot_list[allowed-VBD-devices:contains]=""
snapshot_list[allowed-VIF-devices]=""
snapshot_list[allowed-VIF-devices:contains]=""
snapshot_list[appliance]=""
snapshot_list[blobs]=""
snapshot_list[blocked-operations]=""
snapshot_list[children]=""
snapshot_list[console-uuids]=""
snapshot_list[console-uuids:contains]=""
snapshot_list[cooperative]=""
snapshot_list[current-operations]="Display currently running operations on SNAPSHOTs"
snapshot_list[current-operations:contains]=""
snapshot_list[database]=""
snapshot_list[disks]=""
snapshot_list[dom-id]=""
snapshot_list[generation-id]=""
snapshot_list[guest-metrics-last-updated]=""
snapshot_list[ha-always-run]=""
snapshot_list[ha-restart-priority]=""
snapshot_list[HVM-boot-params]=""
snapshot_list[HVM-boot-policy]=""
snapshot_list[HVM-shadow-multiplier]=""
snapshot_list[install-time]=""
snapshot_list[is-a-snapshot]=""
snapshot_list[is-a-template]=""
snapshot_list[is-control-domain]=""
snapshot_list[last-boot-CPU-flags]=""
snapshot_list[last-boot-record]=""
snapshot_list[live]=""
snapshot_list[memory]=""
snapshot_list[memory-actual]=""
snapshot_list[memory-dynamic-max]=""
snapshot_list[memory-dynamic-min]=""
snapshot_list[memory-overhead]=""
snapshot_list[memory-static-max]=""
snapshot_list[memory-static-min]=""
snapshot_list[memory-target]=""
snapshot_list[--minimal]="Specify --minimal to only show minimal output"
snapshot_list[name-description]="Display SNAPSHOT name-descriptions"
snapshot_list[name-label]="Display SNAPSHOT name-labels"
snapshot_list[networks]=""
snapshot_list[order]=""
snapshot_list[os-version]=""
snapshot_list[other]=""
snapshot_list[other-config]=""
snapshot_list[params]=""
snapshot_list[parent]=""
snapshot_list[platform]=""
snapshot_list[possible-hosts]=""
snapshot_list[power-state]=""
snapshot_list[PV-args]=""
snapshot_list[PV-bootloader]=""
snapshot_list[PV-bootloader-args]=""
snapshot_list[PV-drivers-up-to-date]=""
snapshot_list[PV-drivers-version]=""
snapshot_list[PV-kernel]=""
snapshot_list[PV-legacy-args]=""
snapshot_list[PV-ramdisk]=""
snapshot_list[recommendations]=""
snapshot_list[resident-on]=""
snapshot_list[shutdown-delay]=""
snapshot_list[snapshot-info]=""
snapshot_list[snapshot-of]=""
snapshot_list[snapshots]=""
snapshot_list[snapshot-time]=""
snapshot_list[start-delay]=""
snapshot_list[start-time]=""
snapshot_list[suspend-SR-uuid]=""
snapshot_list[suspend-VDI-uuid]=""
snapshot_list[tags]=""
snapshot_list[tags:contains]=""
snapshot_list[user-version]=""
snapshot_list[uuid]="Display SNAPSHOT UUIDs"
snapshot_list[VCPUs-at-startup]=""
snapshot_list[VCPUs-max]=""
snapshot_list[VCPUs-number]=""
snapshot_list[VCPUs-params]=""
snapshot_list[VCPUs-utilisation]=""
snapshot_list[version]=""
snapshot_list[xenstore-data]=""
snapshot_param_add[param-key]="Key to be added to a set parameter (SRW)."
snapshot_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe SNAPSHOT-param-list* to obtain a list of snapshot parameters."
snapshot_param_add[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list* to obtain a list of SNAPSHOT UUIDs."
snapshot_param_clear[all]="Display all parameter values"
snapshot_param_clear[--minimal]="Specify --minimal to only show minimal output"
snapshot_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
snapshot_param_clear[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list* to obtain a list of SNAPSHOT UUIDs."
snapshot_param_get[all]="Display all parameter values"
snapshot_param_get[database]=""
snapshot_param_get[--minimal]="Specify --minimal to only show minimal output"
snapshot_param_get[param-key]="The SNAPSHOT map parameter key value to return"
snapshot_param_get[param-name]="The SNAPSHOT parameter to return"
snapshot_param_get[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list* to obtain a list of SNAPSHOT UUIDs."
snapshot_param_list[all]="Display all parameter values"
snapshot_param_list[database]=""
snapshot_param_list[--minimal]="Specify --minimal to only show minimal output"
snapshot_param_list[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list* to obtain a list of snapshot UUIDs."
snapshot_param_remove[all]="Display all parameter values"
snapshot_param_remove[--minimal]="Specify --minimal to only show minimal output"
snapshot_param_remove[param-key]="Key or key/value pair to be removed."
snapshot_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
snapshot_param_remove[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list* to obtain a list of SNAPSHOT UUIDs."
snapshot_param_set[actions-after-crash]=""
snapshot_param_set[actions-after-reboot]=""
snapshot_param_set[actions-after-shutdown]=""
snapshot_param_set[affinity]=""
snapshot_param_set[all]="Display all parameter values"
snapshot_param_set[appliance]=""
snapshot_param_set[blocked-operations]=""
snapshot_param_set[ha-always-run]=""
snapshot_param_set[ha-restart-priority]=""
snapshot_param_set[HVM-boot-params]=""
snapshot_param_set[HVM-boot-policy]=""
snapshot_param_set[HVM-shadow-multiplier]=""
snapshot_param_set[is-a-template]=""
snapshot_param_set[memory-dynamic-max]=""
snapshot_param_set[memory-dynamic-min]=""
snapshot_param_set[memory-static-max]=""
snapshot_param_set[memory-static-min]=""
snapshot_param_set[--minimal]="Specify --minimal to only show minimal output"
snapshot_param_set[name-description]="Set name-description of SNAPSHOT"
snapshot_param_set[name-label]="Set name of SNAPSHOT"
snapshot_param_set[order]=""
snapshot_param_set[other-config]=""
snapshot_param_set[platform]=""
snapshot_param_set[PV-args]=""
snapshot_param_set[PV-bootloader]=""
snapshot_param_set[PV-bootloader-args]=""
snapshot_param_set[PV-kernel]=""
snapshot_param_set[PV-legacy-args]=""
snapshot_param_set[PV-ramdisk]=""
snapshot_param_set[shutdown-delay]=""
snapshot_param_set[start-delay]=""
snapshot_param_set[suspend-SR-uuid]=""
snapshot_param_set[suspend-VDI-uuid]=""
snapshot_param_set[user-version]=""
snapshot_param_set[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list* to obtain a list of SNAPSHOT UUIDs."
snapshot_param_set[VCPUs-at-startup]=""
snapshot_param_set[VCPUs-max]=""
snapshot_param_set[VCPUs-params]=""
snapshot_param_set[xenstore-data]=""
snapshot_reset_powerstate[all]="Display all parameter values"
snapshot_reset_powerstate[force]="Force operation"
snapshot_reset_powerstate[--minimal]="Specify --minimal to only show minimal output"
snapshot_reset_powerstate[snapshot-uuid]=""
snapshot_reset_powerstate[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list to obtain a list of SNAPSHOT UUIDs."
snapshot_reset_powerstate[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
snapshot_revert[all]="Display all parameter values"
snapshot_revert[--minimal]="Specify --minimal to only show minimal output"
snapshot_revert[snapshot-uuid]=""
snapshot_revert[uuid]="SNAPSHOT UUID - Use *xe SNAPSHOT-list to obtain a list of SNAPSHOT UUIDs."
snapshot_uninstall[all]="Display all parameter values"
snapshot_uninstall[force]="force - "
snapshot_uninstall[--minimal]="Specify --minimal to only show minimal output"
snapshot_uninstall[snapshot-uuid]="Snapshot UUID - Use *xe snapshot-list* to obtain a list of snapshot UUIDs."
snapshot_uninstall[uuid]="UUID - Use *xe snapshot-list* to obtain a list of snapshot UUIDs."
sr_create[content-type]=""
sr_create[device-config]=""
sr_create[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
sr_create[name-label]=""
sr_create[physical-size]=""
sr_create[shared]=""
sr_create[sm-config]=""
sr_create[type]=""
sr_destroy[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
sr_disable_database_replication[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
sr_enable_database_replication[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
sr_forget[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
sr_introduce[content-type]=""
sr_introduce[name-label]=""
sr_introduce[shared]=""
sr_introduce[type]=""
sr_introduce[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
sr_list[all]="Display all parameter values"
sr_list[allowed-operations:contains]=""
sr_list[allowed-operations]="Display allowed-operations for SRs"
sr_list[blobs]="Display binary data store "
sr_list[content-type]="Display SR content-type "
sr_list[current-operations:contains]=""
sr_list[current-operations]="Display current-operations for SRs"
sr_list[database]=""
sr_list[host]="Display SR host name "
sr_list[introduced-by]="Display which drtask (if any) introduced the SR."
sr_list[local-cache-enabled]="Display local-cache-enabled status [ true | false ]"
sr_list[--minimal]="Specify --minimal to only show minimal output"
sr_list[name-description]="Display SR name-descriptions"
sr_list[name-label]="Display SR name-labels"
sr_list[other-config]=""
sr_list[params]=""
sr_list[PBDs:contains]=""
sr_list[PBDs]="Display PBDs connected to the SR"
sr_list[physical-size]="Display the total physical size of the SR, in bytes. "
sr_list[physical-utilisation]="Display the physical space currently utilized on the SR, in bytes."
sr_list[shared]="Display shared support status [ true | false ]"
sr_list[sm-config]="Display SM dependent data 	"
sr_list[tags:contains]=""
sr_list[tags]="Display tags"
sr_list[type]="Display SR type [ dummy | ext | file | hba | iscsi | iso | lvm  | lvmohba | lvmoiscsi | nfs | udev ]    "
sr_list[uuid]="Display SR UUIDs"
sr_list[VDIs:contains]=""
sr_list[VDIs]="Display VDIs present on the SR"
sr_list[virtual-allocation]="Display the size of all the VDIs present on the SR, in bytes."
sr_param_add[param-key]="Key to be added to a set parameter (SRW)."
sr_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe SR-param-list* to obtain a list of sr parameters."
sr_param_add[uuid]="SR UUID - Use *xe SR-list* to obtain a list of SR UUIDs."
sr_param_clear[param-name]="Writable parameter to be cleared (e.g. *tags*)."
sr_param_clear[uuid]="SR UUID - Use *xe sr-list* to obtain storage repository UUIDs."
sr_param_get[database]=""
sr_param_get[param-key]="The storage repository key to return.  "
sr_param_get[param-name]="The storage repository parameter to return."
sr_param_get[uuid]="SR UUID - Use *xe sr-list* to obtain a list of storage repository UUIDs."
sr_param_list[database]=""
sr_param_list[uuid]="SR UUID - Use *xe sr-list* to obtain a list of storage repository UUIDs."
sr_param_remove[param-key]="Key or key/value pair to be removed."
sr_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
sr_param_remove[uuid]="SR UUID - Use *xe SR-list* to obtain a list of SR UUIDs."
sr_param_set[name-description]="Set name-description of SR"
sr_param_set[name-label]="Set name of SR"
sr_param_set[other-config]=""
sr_param_set[shared]=""
sr_param_set[uuid]="SR UUID - Use *xe SR-list* to obtain a list of SR UUIDs."
sr_probe[device-config]=""
sr_probe[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
sr_probe[sm-config]=""
sr_probe[type]=""
sr_scan[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
sr_update[uuid]="SR UUID - Use *xe SR-list to obtain a list of SR UUIDs."
subject_add[subject-name]=""
subject_list[database]=""
subject_list[other-config]=""
subject_list[params]=""
subject_list[roles]=""
subject_list[roles:contains]=""
subject_list[subject-identifier]=""
subject_list[uuid]="Display SUBJECT UUIDs"
subject_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
subject_param_clear[uuid]="SUBJECT UUID - Use *xe SUBJECT-list* to obtain a list of SUBJECT UUIDs."
subject_param_get[database]=""
subject_param_get[param-key]="The SUBJECT map parameter key value to return"
subject_param_get[param-name]="The SUBJECT parameter to return"
subject_param_get[uuid]="SUBJECT UUID - Use *xe SUBJECT-list* to obtain a list of SUBJECT UUIDs."
subject_param_list[database]=""
subject_param_list[uuid]="SUBJECT UUID - Use *xe SUBJECT-list* to obtain a list of subject UUIDs."
subject_remove[subject-uuid]=""
subject_role_add[role-name]=""
subject_role_add[role-uuid]=""
subject_role_add[uuid]="SUBJECT UUID - Use *xe SUBJECT-list to obtain a list of SUBJECT UUIDs."
subject_role_remove[role-name]=""
subject_role_remove[role-uuid]=""
subject_role_remove[uuid]="SUBJECT UUID - Use *xe SUBJECT-list to obtain a list of SUBJECT UUIDs."
task_cancel[uuid]="TASK UUID - Use *xe TASK-list to obtain a list of TASK UUIDs."
task_list[allowed_operations]=""
task_list[created]=""
task_list[database]=""
task_list[error_info]=""
task_list[finished]=""
task_list[name-description]="Display TASK name-descriptions"
task_list[name-label]="Display TASK name-labels"
task_list[other-config]=""
task_list[params]=""
task_list[progress]=""
task_list[resident-on]=""
task_list[result]=""
task_list[status]=""
task_list[subtask_of]=""
task_list[subtasks]=""
task_list[type]=""
task_list[uuid]="Display TASK UUIDs"
task_param_add[param-key]="Key to be added to a set parameter (SRW)."
task_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe TASK-param-list* to obtain a list of task parameters."
task_param_add[uuid]="TASK UUID - Use *xe TASK-list* to obtain a list of TASK UUIDs."
task_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
task_param_clear[uuid]="TASK UUID - Use *xe TASK-list* to obtain a list of TASK UUIDs."
task_param_get[database]=""
task_param_get[param-key]="The TASK map parameter key value to return"
task_param_get[param-name]="The TASK parameter to return"
task_param_get[uuid]="TASK UUID - Use *xe TASK-list* to obtain a list of TASK UUIDs."
task_param_list[database]=""
task_param_list[uuid]="Task UUID - Use *xe task-list* to obtain a list of task UUIDs."
task_param_remove[param-key]="Key or key/value pair to be removed."
task_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
task_param_remove[uuid]="TASK UUID - Use *xe TASK-list* to obtain a list of TASK UUIDs."
task_param_set[other-config]=""
task_param_set[uuid]="TASK UUID - Use *xe TASK-list* to obtain a list of TASK UUIDs."
template_export[filename]=""
template_export[template-uuid]=""
template_list[actions-after-crash]=""
template_list[actions-after-reboot]=""
template_list[actions-after-shutdown]=""
template_list[affinity]=""
template_list[allowed-operations]="Display list of operations allowed on TEMPLATEs"
template_list[allowed-operations:contains]=""
template_list[allowed-VBD-devices]=""
template_list[allowed-VBD-devices:contains]=""
template_list[allowed-VIF-devices]=""
template_list[allowed-VIF-devices:contains]=""
template_list[appliance]=""
template_list[blobs]=""
template_list[blocked-operations]=""
template_list[children]=""
template_list[console-uuids]=""
template_list[console-uuids:contains]=""
template_list[cooperative]=""
template_list[current-operations]="Display currently running operations on TEMPLATEs"
template_list[current-operations:contains]=""
template_list[database]=""
template_list[disks]=""
template_list[dom-id]=""
template_list[generation-id]=""
template_list[guest-metrics-last-updated]=""
template_list[ha-always-run]=""
template_list[ha-restart-priority]=""
template_list[HVM-boot-params]=""
template_list[HVM-boot-policy]=""
template_list[HVM-shadow-multiplier]=""
template_list[install-time]=""
template_list[is-a-snapshot]=""
template_list[is-a-template]=""
template_list[is-control-domain]=""
template_list[last-boot-CPU-flags]=""
template_list[last-boot-record]=""
template_list[live]=""
template_list[memory]=""
template_list[memory-actual]=""
template_list[memory-dynamic-max]=""
template_list[memory-dynamic-min]=""
template_list[memory-overhead]=""
template_list[memory-static-max]=""
template_list[memory-static-min]=""
template_list[memory-target]=""
template_list[name-description]="Display TEMPLATE name-descriptions"
template_list[name-label]="Display TEMPLATE name-labels"
template_list[networks]=""
template_list[order]=""
template_list[os-version]=""
template_list[other]=""
template_list[other-config]=""
template_list[params]=""
template_list[parent]=""
template_list[platform]=""
template_list[possible-hosts]=""
template_list[power-state]=""
template_list[PV-args]=""
template_list[PV-bootloader]=""
template_list[PV-bootloader-args]=""
template_list[PV-drivers-up-to-date]=""
template_list[PV-drivers-version]=""
template_list[PV-kernel]=""
template_list[PV-legacy-args]=""
template_list[PV-ramdisk]=""
template_list[recommendations]=""
template_list[resident-on]=""
template_list[shutdown-delay]=""
template_list[snapshot-info]=""
template_list[snapshot-of]=""
template_list[snapshots]=""
template_list[snapshot-time]=""
template_list[start-delay]=""
template_list[start-time]=""
template_list[suspend-SR-uuid]=""
template_list[suspend-VDI-uuid]=""
template_list[tags]=""
template_list[tags:contains]=""
template_list[user-version]=""
template_list[uuid]="Display TEMPLATE UUIDs"
template_list[VCPUs-at-startup]=""
template_list[VCPUs-max]=""
template_list[VCPUs-number]=""
template_list[VCPUs-params]=""
template_list[VCPUs-utilisation]=""
template_list[version]=""
template_list[xenstore-data]=""
template_param_add[param-key]="Key to be added to a set parameter (SRW)."
template_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe TEMPLATE-param-list* to obtain a list of template parameters."
template_param_add[uuid]="TEMPLATE UUID - Use *xe TEMPLATE-list* to obtain a list of TEMPLATE UUIDs."
template_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
template_param_clear[uuid]="TEMPLATE UUID - Use *xe TEMPLATE-list* to obtain a list of TEMPLATE UUIDs."
template_param_get[database]=""
template_param_get[param-key]="The TEMPLATE map parameter key value to return"
template_param_get[param-name]="The TEMPLATE parameter to return"
template_param_get[uuid]="TEMPLATE UUID - Use *xe TEMPLATE-list* to obtain a list of TEMPLATE UUIDs."
template_param_list[database]=""
template_param_list[uuid]="Template UUID - Use *xe template-list* to obtain a list of template UUIDs."
template_param_remove[param-key]="Key or key/value pair to be removed."
template_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
template_param_remove[uuid]="TEMPLATE UUID - Use *xe TEMPLATE-list* to obtain a list of TEMPLATE UUIDs."
template_param_set[actions-after-crash]=""
template_param_set[actions-after-reboot]=""
template_param_set[actions-after-shutdown]=""
template_param_set[affinity]=""
template_param_set[appliance]=""
template_param_set[blocked-operations]=""
template_param_set[ha-always-run]=""
template_param_set[ha-restart-priority]=""
template_param_set[HVM-boot-params]=""
template_param_set[HVM-boot-policy]=""
template_param_set[HVM-shadow-multiplier]=""
template_param_set[is-a-template]=""
template_param_set[memory-dynamic-max]=""
template_param_set[memory-dynamic-min]=""
template_param_set[memory-static-max]=""
template_param_set[memory-static-min]=""
template_param_set[name-description]="Set name-description of TEMPLATE"
template_param_set[name-label]="Set name of TEMPLATE"
template_param_set[order]=""
template_param_set[other-config]=""
template_param_set[platform]=""
template_param_set[PV-args]=""
template_param_set[PV-bootloader]=""
template_param_set[PV-bootloader-args]=""
template_param_set[PV-kernel]=""
template_param_set[PV-legacy-args]=""
template_param_set[PV-ramdisk]=""
template_param_set[shutdown-delay]=""
template_param_set[start-delay]=""
template_param_set[suspend-SR-uuid]=""
template_param_set[suspend-VDI-uuid]=""
template_param_set[user-version]=""
template_param_set[uuid]="TEMPLATE UUID - Use *xe TEMPLATE-list* to obtain a list of TEMPLATE UUIDs."
template_param_set[VCPUs-at-startup]=""
template_param_set[VCPUs-max]=""
template_param_set[VCPUs-params]=""
template_param_set[xenstore-data]=""
template_uninstall[force]="Force operation"
template_uninstall[template-uuid]=""
tunnel_create[network-uuid]=""
tunnel_create[pif-uuid]=""
tunnel_destroy[uuid]="TUNNEL UUID - Use *xe TUNNEL-list to obtain a list of TUNNEL UUIDs."
tunnel_list[access-PIF]=""
tunnel_list[all]="Display all parameter values"
tunnel_list[database]=""
tunnel_list[--minimal]="Specify --minimal to only show minimal output"
tunnel_list[other-config]=""
tunnel_list[params]=""
tunnel_list[status]=""
tunnel_list[transport-PIF]=""
tunnel_list[uuid]="Display tunnel UUIDs"
tunnel_param_add[param-key]="Key to be added to a set parameter (SRW)."
tunnel_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe TUNNEL-param-list* to obtain a list of tunnel parameters."
tunnel_param_add[uuid]="TUNNEL UUID - Use *xe TUNNEL-list* to obtain a list of TUNNEL UUIDs."
tunnel_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
tunnel_param_clear[uuid]="TUNNEL UUID - Use *xe TUNNEL-list* to obtain a list of TUNNEL UUIDs."
tunnel_param_get[database]=""
tunnel_param_get[param-key]="The tunnel key to return.  "
tunnel_param_get[param-name]="The tunnel parameter to return."
tunnel_param_get[uuid]="Tunnel UUID - Use *xe tunnel-list* to obtain a list of tunnel UUIDs."
tunnel_param_list[database]=""
tunnel_param_list[uuid]="Tunnel UUID - Use *xe tunnel-list* to obtain a list of tunnel UUIDs."
tunnel_param_remove[param-key]="Key or key/value pair to be removed."
tunnel_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
tunnel_param_remove[uuid]="TUNNEL UUID - Use *xe TUNNEL-list* to obtain a list of TUNNEL UUIDs."
tunnel_param_set[other-config]=""
tunnel_param_set[uuid]="TUNNEL UUID - Use *xe TUNNEL-list* to obtain a list of TUNNEL UUIDs."
update_upload[file-name]=""
update_upload[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
user_password_change[new]="New password for the current user."
user_password_change[old]="Old password for the current user."
vbd_create[bootable]=""
vbd_create[device]=""
vbd_create[mode]=""
vbd_create[type]=""
vbd_create[unpluggable]=""
vbd_create[vdi-uuid]=""
vbd_create[vm-uuid]="Virtual machine UUID - Use *xe vm-list* to obtain a list of VM UUIDs"
vbd_destroy[uuid]="VBD UUID - Use *xe VBD-list to obtain a list of VBD UUIDs."
vbd_eject[uuid]="VBD UUID - Use *xe VBD-list to obtain a list of VBD UUIDs."
vbd_insert[uuid]="VBD UUID - Use *xe VBD-list to obtain a list of VBD UUIDs."
vbd_insert[vdi-uuid]=""
vbd_list[allowed-operations]="Display list of operations allowed on VBDs"
vbd_list[allowed-operations:contains]=""
vbd_list[attachable]=""
vbd_list[bootable]=""
vbd_list[currently-attached]=""
vbd_list[current-operations]="Display currently running operations on VBDs"
vbd_list[current-operations:contains]=""
vbd_list[database]=""
vbd_list[device]=""
vbd_list[empty]=""
vbd_list[io_read_kbs]=""
vbd_list[io_write_kbs]=""
vbd_list[mode]=""
vbd_list[other-config]=""
vbd_list[params]=""
vbd_list[qos_algorithm_params]=""
vbd_list[qos_algorithm_type]=""
vbd_list[qos_supported_algorithms]=""
vbd_list[qos_supported_algorithms:contains]=""
vbd_list[status-code]=""
vbd_list[status-detail]=""
vbd_list[storage-lock]=""
vbd_list[type]=""
vbd_list[unpluggable]=""
vbd_list[userdevice]=""
vbd_list[uuid]="Display VBD UUIDs"
vbd_list[vdi-name-label]=""
vbd_list[vdi-uuid]=""
vbd_list[vm-name-label]=""
vbd_list[vm-uuid]=""
vbd_param_add[param-key]="Key to be added to a set parameter (SRW)."
vbd_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe VBD-param-list* to obtain a list of vbd parameters."
vbd_param_add[uuid]="VBD UUID - Use *xe VBD-list* to obtain a list of VBD UUIDs."
vbd_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
vbd_param_clear[uuid]="VBD UUID - Use *xe VBD-list* to obtain a list of VBD UUIDs."
vbd_param_get[database]=""
vbd_param_get[param-key]="The VBD map parameter key value to return"
vbd_param_get[param-name]="The VBD parameter to return"
vbd_param_get[uuid]="VBD UUID - Use *xe VBD-list* to obtain a list of VBD UUIDs."
vbd_param_list[database]=""
vbd_param_list[uuid]="VBD UUID - Use *xe vbd-list* to obtain a list of VBD UUIDs."
vbd_param_remove[param-key]="Key or key/value pair to be removed."
vbd_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
vbd_param_remove[uuid]="VBD UUID - Use *xe VBD-list* to obtain a list of VBD UUIDs."
vbd_param_set[bootable]=""
vbd_param_set[mode]=""
vbd_param_set[other-config]=""
vbd_param_set[qos_algorithm_params]=""
vbd_param_set[qos_algorithm_type]=""
vbd_param_set[type]=""
vbd_param_set[unpluggable]=""
vbd_param_set[userdevice]=""
vbd_param_set[uuid]="VBD UUID - Use *xe VBD-list* to obtain a list of VBD UUIDs."
vbd_plug[uuid]="VBD UUID - Use *xe VBD-list to obtain a list of VBD UUIDs."
vbd_unplug[force]="Force operation"
vbd_unplug[timeout]=""
vbd_unplug[uuid]="VBD UUID - Use *xe VBD-list to obtain a list of VBD UUIDs."
vdi_clone[driver-params-]=""
vdi_clone[new-name-description]="Desired new name-description for VDI"
vdi_clone[new-name-label]="Desired new name-label for VDI"
vdi_clone[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_copy[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vdi_copy[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_create[name-label]=""
vdi_create[sharable]=""
vdi_create[sm-config]=""
vdi_create[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vdi_create[tags]=""
vdi_create[type]=""
vdi_create[virtual-size]=""
vdi_destroy[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_forget[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_import[filename]=""
vdi_import[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_introduce[location]=""
vdi_introduce[name-description]=""
vdi_introduce[name-label]=""
vdi_introduce[other-config]=""
vdi_introduce[read-only]=""
vdi_introduce[sharable]=""
vdi_introduce[sm-config]=""
vdi_introduce[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vdi_introduce[type]=""
vdi_introduce[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_introduce[xenstore-data]=""
vdi_list[allow-caching]=""
vdi_list[allowed-operations]="Display list of operations allowed on VDIs"
vdi_list[allowed-operations:contains]=""
vdi_list[crashdump-uuids]=""
vdi_list[crashdump-uuids:contains]=""
vdi_list[current-operations]="Display currently running operations on VDIs"
vdi_list[current-operations:contains]=""
vdi_list[database]=""
vdi_list[is-a-snapshot]=""
vdi_list[location]=""
vdi_list[managed]=""
vdi_list[metadata-latest]=""
vdi_list[metadata-of-pool]=""
vdi_list[missing]=""
vdi_list[name-description]="Display VDI name-descriptions"
vdi_list[name-label]="Display VDI name-labels"
vdi_list[on-boot]=""
vdi_list[other-config]=""
vdi_list[params]=""
vdi_list[parent]=""
vdi_list[physical-utilisation]=""
vdi_list[read-only]=""
vdi_list[sharable]=""
vdi_list[sm-config]=""
vdi_list[snapshot-of]=""
vdi_list[snapshots]=""
vdi_list[snapshot-time]=""
vdi_list[sr-name-label]=""
vdi_list[sr-uuid]=""
vdi_list[storage-lock]=""
vdi_list[tags]=""
vdi_list[tags:contains]=""
vdi_list[type]=""
vdi_list[uuid]="Display VDI UUIDs"
vdi_list[vbd-uuids]=""
vdi_list[vbd-uuids:contains]=""
vdi_list[virtual-size]=""
vdi_list[xenstore-data]=""
vdi_param_add[param-key]="Key to be added to a set parameter (SRW)."
vdi_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe VDI-param-list* to obtain a list of vdi parameters."
vdi_param_add[uuid]="VDI UUID - Use *xe VDI-list* to obtain a list of VDI UUIDs."
vdi_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
vdi_param_clear[uuid]="VDI UUID - Use *xe VDI-list* to obtain a list of VDI UUIDs."
vdi_param_get[database]=""
vdi_param_get[param-key]="The VDI map parameter key value to return"
vdi_param_get[param-name]="The VDI parameter to return"
vdi_param_get[uuid]="VDI UUID - Use *xe VDI-list* to obtain a list of VDI UUIDs."
vdi_param_list[database]=""
vdi_param_list[uuid]="VDI UUID - Use *xe vdi-list* to obtain a list of VDI UUIDs."
vdi_param_remove[param-key]="Key or key/value pair to be removed."
vdi_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
vdi_param_remove[uuid]="VDI UUID - Use *xe VDI-list* to obtain a list of VDI UUIDs."
vdi_param_set[allow-caching]=""
vdi_param_set[name-description]="Set name-description of VDI"
vdi_param_set[name-label]="Set name of VDI"
vdi_param_set[on-boot]=""
vdi_param_set[other-config]=""
vdi_param_set[uuid]="VDI UUID - Use *xe VDI-list* to obtain a list of VDI UUIDs."
vdi_pool_migrate[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vdi_pool_migrate[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_resize[disk-size]=""
vdi_resize[online]=""
vdi_resize[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_snapshot[driver-params-]=""
vdi_snapshot[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_unlock[force]="Force operation"
vdi_unlock[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vdi_update[uuid]="VDI UUID - Use *xe VDI-list to obtain a list of VDI UUIDs."
vgpu_create[gpu-group-uuid]="GPU group UUID - Use *xe gpu-group-list* to obtain a list of GPU group UUIDs."
vgpu_create[vm-uuid]="VM UUID - Use *xe vm-list* to obtain a list of VM UUIDs."
vgpu_destroy[uuid]="Virtual GPU UUID - Use *xe vgpu-list* to obtain a list of Virtual GPU UUIDs."
vgpu_list[all]="Display all parameter values"
vgpu_list[currently-attached]="Display currently-attached status [ true | false ] "
vgpu_list[database]=""
vgpu_list[gpu-group-name-label]="Display GPU group names"
vgpu_list[gpu-group-uuid]="Display GPU group UUIDs"
vgpu_list[--minimal]="Specify --minimal to only show minimal output"
vgpu_list[other-config]="Display additional configuration parameter values for a virtual GPU"
vgpu_list[params]=""
vgpu_list[uuid]="Display a Virtual GPU UUID"
vgpu_list[vm-name-label]="Display a VM name"
vgpu_list[vm-uuid]="Display a VM UUID"
vgpu_param_add[param-key]="Key to be added to a set parameter (SRW)."
vgpu_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe VGPU-param-list* to obtain a list of vgpu parameters."
vgpu_param_add[uuid]="VGPU UUID - Use *xe VGPU-list* to obtain a list of VGPU UUIDs."
vgpu_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
vgpu_param_clear[uuid]="VGPU UUID - Use *xe VGPU-list* to obtain a list of VGPU UUIDs."
vgpu_param_get[database]=""
vgpu_param_get[param-key]="The VGPU map parameter key value to return"
vgpu_param_get[param-name]="The VGPU parameter to return"
vgpu_param_get[uuid]="VGPU UUID - Use *xe VGPU-list* to obtain a list of VGPU UUIDs."
vgpu_param_list[database]=""
vgpu_param_list[uuid]="VGPU UUID - Use *xe vgpu-list* to obtain a list of VGPU UUIDs."
vgpu_param_remove[param-key]="Key or key/value pair to be removed."
vgpu_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
vgpu_param_remove[uuid]="VGPU UUID - Use *xe VGPU-list* to obtain a list of VGPU UUIDs."
vgpu_param_set[other-config]=""
vgpu_param_set[uuid]="VGPU UUID - Use *xe VGPU-list* to obtain a list of VGPU UUIDs."
vif_create[device]="The available VM ethernet interface number (e.g. eth0)"
vif_create[mac]="Specified 48-bit MAC Address"
vif_create[network-uuid]="Network UUID - Use *xe network-list* to obtain a list of networks."
vif_create[vm-uuid]="VM UUID - Use *xe vm-list* to obtain a list of VMs."
vif_destroy[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs."
vif_list[allowed-operations:contains]=""
vif_list[allowed-operations]="Display list of operations allowed on VIFs"
vif_list[currently-attached]="Display if VIF is currently-attached [ true | false]"
vif_list[current-operations:contains]=""
vif_list[current-operations]="Display currently running operations on VIFs"
vif_list[database]=""
vif_list[device]="Display the device number of machine-readable interfaces (e.g. eth0)."
vif_list[io_read_kbs]="Display read bandwidth in KB/s - Use *xe vif-param-get* to return parameter"
vif_list[io_write_kbs]="Display write bandwidth in KB/s - Use *xe vif-param-get* to return parameter"
vif_list[ipv4-allowed:contains]=""
vif_list[ipv4-allowed]="Display a list of permitted IPv4 addresses when switch port locking is enabled"
vif_list[ipv6-allowed:contains]=""
vif_list[ipv6-allowed]="Display a list of permitted IPv6 addresses when switch port locking is enabled"
vif_list[locking-mode]="Display current switch port locking mode for VIFs [ default | locked | unlocked | disabled ]"
vif_list[MAC-autogenerated]="Display if MAC is autogenerated [ true | false ]"
vif_list[MAC]="Display 48-bit MAC address of VIFs"
vif_list[MTU]="Display maximum transmission unit sizes"
vif_list[network-name-label]="Display name of the network for VIFs"
vif_list[network-uuid]="Display network UUID of the VIFs"
vif_list[other-config]="Display additional configuration settings for VIFs"
vif_list[other-config:ethtool-gso]="Display generic segmentation offload status [ on | off ]"
vif_list[other-config:ethtool-rx]="Display receive checksum status [ on | off ]"
vif_list[other-config:ethtool-sg]="Display scatter gather status [ on | off ]"
vif_list[other-config:ethtool-tso]="Display TCP segmentation offload status [ on | off ]"
vif_list[other-config:ethtool-tx]="Display transmit checksum status [ on | off ]"
vif_list[other-config:ethtool-ufo]="Display UDP fragment offload status [ on | off ]"
vif_list[other-config:promiscuous]="Display if VIF is promiscuous [ true | false ]"
vif_list[params]=""
vif_list[qos_algorithm_params]="Display parameters for the QoS algorithms supported by VIFs (e.g. kbps)."
vif_list[qos_algorithm_type]="Display type of QoS algorithms used by VIFs"
vif_list[qos_supported_algorithms:contains]=""
vif_list[qos_supported_algorithms]="Display supported QoS algorithms for VIFs"
vif_list[uuid]="Display VIF UUIDs"
vif_list[vm-name-label]="Display VIFs VM name-labels"
vif_list[vm-uuid]="Display VIF interface's VM UUIDs"
vif_param_add[<MAP PARAMETER KEY>]="Key/value pair to be added to a map parameter (MRW). "
vif_param_add[param-key]="Key to be added to a set parameter (SRW)."
vif_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe vif-param-list* to obtain a list of network parameters."
vif_param_add[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of vif UUIDs"
vif_param_clear[param-name]="Writable parameter to be cleared. (e.g. *ipv4-allowed*). "
vif_param_clear[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs."
vif_param_get[database]=""
vif_param_get[param-key]="The VIF key value to return."
vif_param_get[param-name]="The VIF parameter value to return."
vif_param_get[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs"
vif_param_list[database]=""
vif_param_list[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs."
vif_param_remove[param-key]="Key or key/value pair to be removed."
vif_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
vif_param_remove[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs."
vif_param_set[ipv4-allowed]="Set permitted IPv4 addresses used when switch port locking is enabled. Use a comma to separate multiple IPv4 addresses"
vif_param_set[ipv6-allowed]="Set permitted IPv6 addresses used when switch port locking is enabled. Use a comma to separate multiple IPv6 addresses 	"
vif_param_set[locking-mode]=""
vif_param_set[locking-mode:default]="VIF interface applies filtering level of the network default-locking-mode parameter"
vif_param_set[locking-mode:disabled]="Set locking-mode to *disabled* to deny all traffic"
vif_param_set[locking-mode:locked]="Set locking-mode to *locked* to only allow permitted MAC and IP addresses to send and receive traffic on the VIF"
vif_param_set[locking-mode:unlocked]="Set locking-mode to *unlocked* to permit all traffic"
vif_param_set[other-config]=""
vif_param_set[other-config:ethtool-gso]="Set to enable generic segmentation offload: ethtool-gso=[ on | off ]"
vif_param_set[other-config:ethtool-rx]="Set to enable receive checksum: ethtool-rx=[ on | off ]"
vif_param_set[other-config:ethtool-sg]="Set to enable scatter gather: ethtool-sg=[ on | off ]"
vif_param_set[other-config:ethtool-tso]="Set to enable TCP segmentation offload: ethtool-tso=[ on | off ]"
vif_param_set[other-config:ethtool-tx]="Set to enable transmit checksum: ethtool-tx=[ on | off ]"
vif_param_set[other-config:ethtool-ufo]="Set to enable UDP fragment offload: ethtool-ufo=[ on | off ]"
vif_param_set[other-config:mtu]="Set MTU size for VIF"
vif_param_set[other-config:promiscuous]="Set to enable promiscuous mode: promiscuous=[ true | false ]"
vif_param_set[qos_algorithm_params]="Set parameters for the QoS algorithms supported by the VIF interface"
vif_param_set[qos_algorithm_type]="Set type of QoS algorithm used by the VIF interface"
vif_param_set[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs"
vif_plug[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs."
vif_unplug[force]="Force operation"
vif_unplug[uuid]="VIF UUID - Use *xe vif-list* to obtain a list of VIF UUIDs."
vlan_create[network-uuid]="Internal network to be connected to VLAN's untagged PIF - Use *xe network-list* to obtain a list of networks found in a pool."
vlan_create[pif-uuid]="Physical PIF to be the tagged-PIF for the VLAN. The pseudo PIF (untagged-PIF) is associated with the physical PIF. - Use *xe pif-list* to obtain a list of PIF interfaces."
vlan_create[vlan]="Desired VLAN tag"
vlan_destroy[uuid]="VLAN UUID - Use *xe vlan-list* to obtain a list of VLAN UUIDs."
vlan_list[all]="Display all parameter values	"
vlan_list[database]=""
vlan_list[params]=""
vlan_list[tag]="Display VLAN IDs [ 0 - 4094 ] "
vlan_list[tagged-PIF]="Display physical PIF UUIDs"
vlan_list[untagged-PIF]="Display pseudo PIF UUIDs"
vlan_list[uuid]="Display VLAN UUIDs"
vlan_param_get[database]=""
vlan_param_get[param-key]="The VLAN map parameter key value to return"
vlan_param_get[param-name]="The VLAN parameter value to return."
vlan_param_get[uuid]="VLAN UUID - Use *xe vlan-list* to obtain a list of VLAN UUIDs."
vlan_param_list[database]=""
vlan_param_list[uuid]="VLAN UUID - Use *xe vlan-list* to obtain a list of a VLAN UUIDs."
vm_assert_can_be_recovered[database]=""
vm_assert_can_be_recovered[uuid]="VM UUID - Use *xe VM-list to obtain a list of VM UUIDs."
vm_cd_add[cd-name]="CD Name - Use *xe cd-list* to obtain a list of CD names."
vm_cd_add[device]="Device Number - Use *xe vm-param-get uuid=<VM UUID> param-name=allowed-VBD-devices* to obtain allowed Device Numbers."
vm_cd_add[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_cd_add[<vm selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VMs and VM parameters to filter on. "
vm_cd_eject[cd-name]="CD Name - Use *xe cd-list* to obtain a list of CD names."
vm_cd_eject[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_cd_eject[<vm selectors]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on. "
vm_cd_insert[cd-name]=""
vm_cd_insert[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_cd_list[vbd-params]=""
vm_cd_list[vdi-params]=""
vm_cd_list[<vm-selectors>]=""
vm_cd_remove[cd-name]="CD Name - Use *xe cd-list* to obtain a list of CD names."
vm_cd_remove[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_cd_remove[<vm selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on. "
vm_checkpoint[new-name-description]="Desired new name-description for VM"
vm_checkpoint[new-name-label]="Desired new name-label for VM"
vm_checkpoint[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_clone[new-name-description]="Desired new name-description for VM"
vm_clone[new-name-label]="Desired new name-label for VM"
vm_clone[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_compute_maximum_memory[approximate]=""
vm_compute_maximum_memory[total]=""
vm_compute_maximum_memory[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_compute_memory_overhead[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_copy_bios_strings[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
vm_copy_bios_strings[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_copy[new-name-description]="Desired new name-description for VM"
vm_copy[new-name-label]="Desired new name-label for VM"
vm_copy[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vm_copy[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_crashdump_list[<vm-selectors>]=""
vm_data_source_forget[data-source]=""
vm_data_source_forget[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_data_source_list[<vm-selectors>]=""
vm_data_source_query[data-source]=""
vm_data_source_query[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_data_source_record[data-source]=""
vm_data_source_record[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_destroy[uuid]="VM UUID - Use *xe VM-list to obtain a list of VM UUIDs."
vm_disk_add[device]=""
vm_disk_add[disk-size]=""
vm_disk_add[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vm_disk_add[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_disk_list[vbd-params]=""
vm_disk_list[vdb-params]="Virtual block device parameters to display - Use *xe vbd-list* & *xe vbd-param-list* to obtain a list of VBD parameters."
vm_disk_list[vdi-params]="Virtual disk image parameters to display - Use *xe vdi-list* & *xe vdi-param-list* to obtain a list of VDI parameters."
vm_disk_list[<vm-selectors>]=""
vm_disk_list[<vm selectors]="Parameters to select VM(s) - Use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_disk_remove[device]=""
vm_disk_remove[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_export[compress]=""
vm_export[filename]=""
vm_export[include-snapshots]=""
vm_export[preserve-power-state]=""
vm_export[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_import[filename]=""
vm_import[force]="Force operation"
vm_import[host-password]=""
vm_import[host-username]=""
vm_import[preserve]=""
vm_import[remote-config]=""
vm_import[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vm_import[type]=""
vm_install[copy-bios-strings-from]=""
vm_install[new-name-label]="Desired new name-label for VM"
vm_install[sr-name-label]=""
vm_install[sr-uuid]="Desired storage repository UUID - use *xe sr-list* to get a list of storage repositories"
vm_install[template]=""
vm_is_bios_customized[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_list[actions-after-crash]=""
vm_list[actions-after-reboot]=""
vm_list[actions-after-shutdown]=""
vm_list[affinity]=""
vm_list[allowed-operations]="Display list of operations allowed on VMs"
vm_list[allowed-operations:contains]=""
vm_list[allowed-VBD-devices]=""
vm_list[allowed-VBD-devices:contains]=""
vm_list[allowed-VIF-devices]=""
vm_list[allowed-VIF-devices:contains]=""
vm_list[appliance]=""
vm_list[blobs]=""
vm_list[blocked-operations]=""
vm_list[children]=""
vm_list[console-uuids]=""
vm_list[console-uuids:contains]=""
vm_list[cooperative]=""
vm_list[current-operations]="Display currently running operations on VMs"
vm_list[current-operations:contains]=""
vm_list[database]=""
vm_list[disks]=""
vm_list[dom-id]=""
vm_list[generation-id]=""
vm_list[guest-metrics-last-updated]=""
vm_list[ha-always-run]=""
vm_list[ha-restart-priority]=""
vm_list[HVM-boot-params]=""
vm_list[HVM-boot-policy]=""
vm_list[HVM-shadow-multiplier]=""
vm_list[install-time]=""
vm_list[is-a-snapshot]=""
vm_list[is-a-template]=""
vm_list[is-control-domain]=""
vm_list[last-boot-CPU-flags]=""
vm_list[last-boot-record]=""
vm_list[live]=""
vm_list[memory]=""
vm_list[memory-actual]=""
vm_list[memory-dynamic-max]=""
vm_list[memory-dynamic-min]=""
vm_list[memory-overhead]=""
vm_list[memory-static-max]=""
vm_list[memory-static-min]=""
vm_list[memory-target]=""
vm_list[name-description]="Display VM name-descriptions"
vm_list[name-label]="Display VM name-labels"
vm_list[networks]=""
vm_list[order]=""
vm_list[os-version]=""
vm_list[other]=""
vm_list[other-config]=""
vm_list[params]=""
vm_list[parent]=""
vm_list[platform]=""
vm_list[possible-hosts]=""
vm_list[power-state]=""
vm_list[PV-args]=""
vm_list[PV-bootloader]=""
vm_list[PV-bootloader-args]=""
vm_list[PV-drivers-up-to-date]=""
vm_list[PV-drivers-version]=""
vm_list[PV-kernel]=""
vm_list[PV-legacy-args]=""
vm_list[PV-ramdisk]=""
vm_list[recommendations]=""
vm_list[resident-on]=""
vm_list[shutdown-delay]=""
vm_list[snapshot-info]=""
vm_list[snapshot-of]=""
vm_list[snapshots]=""
vm_list[snapshot-time]=""
vm_list[start-delay]=""
vm_list[start-time]=""
vm_list[suspend-SR-uuid]=""
vm_list[suspend-VDI-uuid]=""
vm_list[tags]=""
vm_list[tags:contains]=""
vm_list[user-version]=""
vm_list[uuid]="Display VM UUIDs"
vm_list[VCPUs-at-startup]=""
vm_list[VCPUs-max]=""
vm_list[VCPUs-number]=""
vm_list[VCPUs-params]=""
vm_list[VCPUs-utilisation]=""
vm_list[version]=""
vm_list[xenstore-data]=""
vm_memory_dynamic_range_set[max]=""
vm_memory_dynamic_range_set[min]=""
vm_memory_dynamic_range_set[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_memory_limits_set[dynamic-max]=""
vm_memory_limits_set[dynamic-min]=""
vm_memory_limits_set[static-max]=""
vm_memory_limits_set[static-min]=""
vm_memory_limits_set[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_memory_shadow_multiplier_set[multiplier]=""
vm_memory_shadow_multiplier_set[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_memory_static_range_set[max]=""
vm_memory_static_range_set[min]=""
vm_memory_static_range_set[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_memory_target_set[target]=""
vm_memory_target_set[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_migrate[destination-sr-uuid]=""
vm_migrate[force]="Force operation"
vm_migrate[host]=""
vm_migrate[host-uuid]="Host UUID - Use *xe host-list* to obtain a list of host UUIDs."
vm_migrate[live]=""
vm_migrate[remote-master]=""
vm_migrate[remote-network]=""
vm_migrate[remote-password]=""
vm_migrate[remote-username]=""
vm_migrate[vdi]=""
vm_migrate[vif]=""
vm_migrate[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_param_add[param-key]="Key to be added to a set parameter (SRW)."
vm_param_add[param-name]="Parameter to have key or key/value pair added - Use *xe VM-param-list* to obtain a list of vm parameters."
vm_param_add[uuid]="VM UUID - Use *xe VM-list* to obtain a list of VM UUIDs."
vm_param_clear[param-name]="Writable parameter to be cleared. (e.g. other-config)."
vm_param_clear[uuid]="VM UUID - Use *xe VM-list* to obtain a list of VM UUIDs."
vm_param_get[database]=""
vm_param_get[param-key]="The VM map parameter key value to return"
vm_param_get[param-name]="The VM parameter to return"
vm_param_get[uuid]="VM UUID - Use *xe VM-list* to obtain a list of VM UUIDs."
vm_param_list[database]=""
vm_param_list[uuid]="VM UUID - Use *xe VM-list* to obtain a list of vm UUIDs."
vm_param_remove[param-key]="Key or key/value pair to be removed."
vm_param_remove[param-name]="Parameter that contains keys or key/value pairs. (e.g. other-config)."
vm_param_remove[uuid]="VM UUID - Use *xe VM-list* to obtain a list of VM UUIDs."
vm_param_set[actions-after-crash]=""
vm_param_set[actions-after-reboot]=""
vm_param_set[actions-after-shutdown]=""
vm_param_set[affinity]=""
vm_param_set[appliance]=""
vm_param_set[blocked-operations]=""
vm_param_set[ha-always-run]=""
vm_param_set[ha-restart-priority]=""
vm_param_set[HVM-boot-params]=""
vm_param_set[HVM-boot-policy]=""
vm_param_set[HVM-shadow-multiplier]=""
vm_param_set[is-a-template]=""
vm_param_set[memory-dynamic-max]=""
vm_param_set[memory-dynamic-min]=""
vm_param_set[memory-static-max]=""
vm_param_set[memory-static-min]=""
vm_param_set[name-description]="Set name-description of VM"
vm_param_set[name-label]="Set name of VM"
vm_param_set[order]=""
vm_param_set[other-config]=""
vm_param_set[platform]=""
vm_param_set[PV-args]=""
vm_param_set[PV-bootloader]=""
vm_param_set[PV-bootloader-args]=""
vm_param_set[PV-kernel]=""
vm_param_set[PV-legacy-args]=""
vm_param_set[PV-ramdisk]=""
vm_param_set[shutdown-delay]=""
vm_param_set[start-delay]=""
vm_param_set[suspend-SR-uuid]=""
vm_param_set[suspend-VDI-uuid]=""
vm_param_set[user-version]=""
vm_param_set[uuid]="VM UUID - Use *xe VM-list* to obtain a list of VM UUIDs."
vm_param_set[VCPUs-at-startup]=""
vm_param_set[VCPUs-max]=""
vm_param_set[VCPUs-params]=""
vm_param_set[xenstore-data]=""
vm_pause[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_reboot[force]="Force operation"
vm_reboot[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_recover[database]=""
vm_recover[force]="Force operation"
vm_recover[uuid]="VM UUID - Use *xe VM-list to obtain a list of VM UUIDs."
vm_reset_powerstate[force]="Force operation"
vm_reset_powerstate[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_resume[force]="Force operation"
vm_resume[on]=""
vm_resume[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_shutdown[force]="Force operation"
vm_shutdown[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_snapshot[new-name-description]="Desired new name-description for VM"
vm_snapshot[new-name-label]="Desired new name-label for VM"
vm_snapshot[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_snapshot_with_quiesce[new-name-description]="Desired new name-description for VM"
vm_snapshot_with_quiesce[new-name-label]="Desired new name-label for VM"
vm_snapshot_with_quiesce[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_start[force]="Force operation"
vm_start[on]=""
vm_start[paused]=""
vm_start[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_suspend[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_uninstall[force]="Force operation"
vm_uninstall[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_unpause[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_vcpu_hotplug[new-vcpus]=""
vm_vcpu_hotplug[<vm-selectors>]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on."
vm_vif_list[<vm-selectors>]=""
vm_vif_list[<vm selectors]="Parameters to select VM(s) - use *xe vm-list params=all* to get a list of VM parameters to filter on. "
